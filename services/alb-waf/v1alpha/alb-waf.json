{
  "components": {
    "schemas": {
      "CreateCoreRuleSetPayload": {
        "description": "CreateCoreRuleSetRequest creates a rule configuration.",
        "properties": {
          "active": {
            "description": "To activate the OWASP core rule set, set this boolean to true.",
            "example": true,
            "title": "OWASP Core Rule Set",
            "type": "boolean"
          },
          "name": {
            "description": "Core rule set configuration name.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCoreRuleSetResponse": {
        "description": "CreateCoreRuleSetResponse returns rule configuration name and it's rules.",
        "properties": {
          "active": {
            "description": "Indicates if the OWASP core rule set is active.",
            "example": true,
            "title": "OWASP Core Rule Set",
            "type": "boolean"
          },
          "name": {
            "description": "Core rule set configuration name.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateRulesPayload": {
        "description": "CreateRulesRequest creates a rule configuration.",
        "properties": {
          "name": {
            "description": "Rule configuration name.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Custom rules for WAF written in Seclang syntax.",
            "example": "SecRule REQUEST_URI \"@streq /admin\" \"id:101,phase:2,t:lowercase,deny\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateRulesResponse": {
        "description": "CreateRulesResponse returns rule configuration name and it's rules.",
        "properties": {
          "name": {
            "description": "Rule configuration name.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Custom rules written in Seclang syntax.",
            "example": "SecRule REQUEST_URI \"@streq /admin\" \"id:101,phase:2,t:lowercase,deny\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateWAFPayload": {
        "description": "CreateWAFRequest creates a WAF with rules.",
        "properties": {
          "coreRuleSetName": {
            "description": "Name of the core rule set configuration for that WAF.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "name": {
            "description": "WAF name",
            "example": "my-waf-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rulesConfigName": {
            "description": "Name of the rule configuration for that WAF.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateWAFResponse": {
        "description": "CreateWAFResponse returns name and custom rules.",
        "properties": {
          "coreRuleSetName": {
            "description": "Name of the core rule set configuration for that WAF.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "name": {
            "description": "WAF name",
            "example": "my-waf-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rulesConfigName": {
            "description": "Name of the rule configuration for that WAF.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteCoreRuleSetResponse": {
        "description": "DeleteCoreRuleSetResponse returns has empty body if successful.",
        "type": "object"
      },
      "DeleteRulesResponse": {
        "description": "DeleteRulesResponse returns has empty body if successful.",
        "type": "object"
      },
      "DeleteWAFResponse": {
        "description": "DeleteWAFResponse returns has empty body if successful.",
        "type": "object"
      },
      "GetCoreRuleSetResponse": {
        "description": "GetCoreRuleSetResponse returns rule configuration name and it's rules.",
        "properties": {
          "active": {
            "description": "Indicates if the OWASP core rule set is active.",
            "example": true,
            "title": "OWASP Core Rule Set",
            "type": "boolean"
          },
          "name": {
            "description": "Core rule set configuration name.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetRulesResponse": {
        "description": "GetRulesResponse returns rule configuration name and it's rules.",
        "properties": {
          "name": {
            "description": "Rule configuration name.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Custom rules written in Seclang syntax.",
            "example": "SecRule REQUEST_URI \"@streq /admin\" \"id:101,phase:2,t:lowercase,deny\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetWAFResponse": {
        "description": "GetWAFResponse returns id, name and custom rules.",
        "properties": {
          "coreRuleSetName": {
            "description": "Name of the core rule set configuration for that WAF.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "name": {
            "description": "WAF name",
            "example": "my-waf-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rulesConfigName": {
            "description": "Name of the rule configuration for that WAF.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleProtobufAny": {
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.",
        "properties": {
          "@type": {
            "description": "The type of the serialized message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCoreRuleSetResponse": {
        "description": "ListCoreRuleSetResponse returns a list of rule configuration responses.",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GetCoreRuleSetResponse"
            },
            "type": "array"
          },
          "nextPageId": {
            "description": "Continue token from the ListCoreRuleSetResponse with Limit option",
            "example": "eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQ1Njk3ODA2LCJzdGFydCI6Im15LWFsYi1uZXdcdTAwMDAifQ",
            "format": "string",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListRulesResponse": {
        "description": "ListRulesResponse returns a list of rule configuration responses.",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GetRulesResponse"
            },
            "type": "array"
          },
          "nextPageId": {
            "description": "Continue token from the ListRulesResponse with Limit option",
            "example": "eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQ1Njk3ODA2LCJzdGFydCI6Im15LWFsYi1uZXdcdTAwMDAifQ",
            "format": "string",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListWAFResponse": {
        "description": "ListWAFResponse returns a list of WAF responses.",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GetWAFResponse"
            },
            "type": "array"
          },
          "nextPageId": {
            "description": "Continue token from the ListWAFResponse with Limit option",
            "example": "eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQ1Njk3ODA2LCJzdGFydCI6Im15LWFsYi1uZXdcdTAwMDAifQ",
            "format": "string",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details.  There is a common set of message types for APIs to use.",
            "items": {
              "$ref": "#/components/schemas/GoogleProtobufAny"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCoreRuleSetPayload": {
        "description": "UpdateCoreRuleSetRequest updates a rules configuration, but only if it changed.",
        "properties": {
          "active": {
            "description": "To activate the OWASP core rule set, set this boolean to true.",
            "example": true,
            "title": "OWASP Core Rule Set",
            "type": "boolean"
          },
          "name": {
            "description": "Core rule set configuration name.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCoreRuleSetResponse": {
        "description": "UpdateCoreRuleSetResponse returns rule configuration name and it's rules.",
        "properties": {
          "active": {
            "description": "Indicates if the OWASP core rule set is active.",
            "example": true,
            "title": "OWASP Core Rule Set",
            "type": "boolean"
          },
          "name": {
            "description": "Core rule set configuration name.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateRulesPayload": {
        "description": "UpdateRulesRequest updates a rules configuration, but only if it changed.",
        "properties": {
          "name": {
            "description": "Rule configuration name.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Custom rules for WAF written in Seclang syntax.",
            "example": "SecRule REQUEST_URI \"@streq /admin\" \"id:101,phase:2,t:lowercase,deny\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateRulesResponse": {
        "description": "UpdateRulesResponse returns rule configuration name and it's rules.",
        "properties": {
          "name": {
            "description": "Rule configuration name.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Custom rules written in Seclang syntax.",
            "example": "SecRule REQUEST_URI \"@streq /admin\" \"id:101,phase:2,t:lowercase,deny\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateWAFPayload": {
        "description": "UpdateWAFRequest updates a WAF if rules changed.",
        "properties": {
          "coreRuleSetName": {
            "description": "Name of the core rule set configuration for that WAF.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "name": {
            "description": "WAF name",
            "example": "my-waf-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rulesConfigName": {
            "description": "Name of the rule configuration for that WAF.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateWAFResponse": {
        "description": "UpdateWAFResponse returns name and custom rules.",
        "properties": {
          "coreRuleSetName": {
            "description": "Name of the core rule set configuration for that WAF.",
            "example": "my-core-rule-set-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "name": {
            "description": "WAF name",
            "example": "my-waf-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          },
          "rulesConfigName": {
            "description": "Name of the rule configuration for that WAF.",
            "example": "my-rules-config",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "description": "Generate a Web Application Firewall (WAF) to use with Application Load Balancers (ALB). The name of the WAF configuration is used in the listener of the ALB. This will activate the WAF for that ALB. An ALB with a WAF can have OWASP core rule set enabled and in addition can have custom rule configurations. To create a WAF one first needs to create all the configurations that are referenced in the WAF configuration. Currently this only consists of a rule configuration, which is written in Seclang. Once all configurations are created and referenced in the WAF configuration it can be used with an ALB. Currently updating a WAF configuration will not update an existing ALB until the Load Balancer VMs are restarted.",
    "title": "Application Load Balancer - Web Application Firewall API",
    "version": "1alpha.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1alpha/projects/{projectId}/regions/{region}/core-rule-sets": {
      "get": {
        "description": "List all existing core rule set (CRS) configurations that are stored in the project.",
        "operationId": "ListCoreRuleSets",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_size specifies how many rule configurations should be returned on this page. Must be a positive number \u003c= 1000",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_id is a page identifier returned by the previous response and is used to request the next page",
            "in": "query",
            "name": "pageId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCoreRuleSetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "410": {
            "description": "page_id is expired"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List of CRS configurations",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.crs.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "post": {
        "description": "With this endpoint a core rule set (CRS) configuration is created and stored in this project. Currently it is only possible to enable it. This rule configuration is supposed to be referenced by a WAF configuration. It can be referenced by any number of WAF configurations in the same project.",
        "operationId": "CreateCoreRuleSet",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCoreRuleSetPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCoreRuleSetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create a CRS configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.crs.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v1alpha/projects/{projectId}/regions/{region}/core-rule-sets/{name}": {
      "delete": {
        "description": "To delete a core rule set (CRS) configuration this endpoint is used, but it is only possible to delete it if no WAF configuration is referencing it.",
        "operationId": "DeleteCoreRuleSet",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCoreRuleSetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "CRS is used by WAF"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete a CRS configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.crs.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "get": {
        "description": "To retrieve an existing core rule set (CRS) configuration this endpoint can be used.",
        "operationId": "GetCoreRuleSet",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoreRuleSetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "Rule configuration not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retrieve a CRS configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.crs.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "put": {
        "description": "This endpoint will update an existing core rule set (CRS) configuration and also inturn update all WAF configurations that reference it.",
        "operationId": "UpdateCoreRuleSet",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCoreRuleSetPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCoreRuleSetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "Conflict with current state"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update a CRS configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.crs.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v1alpha/projects/{projectId}/regions/{region}/rules": {
      "get": {
        "description": "List all existing rule configurations that are stored in the project.",
        "operationId": "ListRules",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_size specifies how many rule configurations should be returned on this page. Must be a positive number \u003c= 1000",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_id is a page identifier returned by the previous response and is used to request the next page",
            "in": "query",
            "name": "pageId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRulesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "410": {
            "description": "page_id is expired"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List of rule configurations",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.rules.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "post": {
        "description": "With this endpoint a rule configuration is created and stored in this project. The rules are written in Seclang. This rule configuration is supposed to be referenced by a WAF configuration. It can be referenced by any number of WAF configurations in the same project. There is a limit of 1 MB of data on these rules.",
        "operationId": "CreateRules",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRulesPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRulesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create a rule configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.rules.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v1alpha/projects/{projectId}/regions/{region}/rules/{name}": {
      "delete": {
        "description": "To delete a rule configuration this endpoint is used, but it is only possible to delete it if no WAF configuration is referencing it.",
        "operationId": "DeleteRules",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRulesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Rule is used by WAF"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete a rule configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.rules.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "get": {
        "description": "To retrieve an existing rule configuration this endpoint can be used.",
        "operationId": "GetRules",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRulesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "Rule configuration not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retrieve a rule configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.rules.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "put": {
        "description": "This endpoint will update an existing rules configuration and also inturn update all WAF configurations that reference it. There is a limit of 1 MB of data on these rules.",
        "operationId": "UpdateRules",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRulesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "Conflict with current state"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update a rule configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.rules.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v1alpha/projects/{projectId}/regions/{region}/wafs": {
      "get": {
        "description": "To list all WAF configurations stored in a project, use this endpoint.",
        "operationId": "ListWAF",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_size specifies how many WAFs should be returned on this page. Must be a positive number \u003c= 1000",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_id is a page identifier returned by the previous response and is used to request the next page",
            "in": "query",
            "name": "pageId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWAFResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "410": {
            "description": "page_id is expired"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List of WAF configurations",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "post": {
        "description": "This endpoint will create and store a WAF configuration in a project. The name of this WAF configuration is supposed to be used in the listener of an Application Load Balancer, which will activate this configuration and in addition it is possible to enable the core rule set. This WAF configuration can be used by any number of Application Load Balancers in the same project. The configuration has a reference to a rule configuration. This rule configuration has to exist when trying to create a WAF configuration. Later other configuration references will be added to this object.",
        "operationId": "CreateWAF",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWAFPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWAFResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create a WAF configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v1alpha/projects/{projectId}/regions/{region}/wafs/{name}": {
      "delete": {
        "description": "This will delete the specified WAF configuration, but only if it is not used by any Application Load Balancer in the project.",
        "operationId": "DeleteWAF",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWAFResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "WAF is used by a load balancer"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete a WAF configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "get": {
        "description": "This endpoint will return the specified WAF configuration.",
        "operationId": "GetWAF",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWAFResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "WAF configuration not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retrieve a WAF configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "put": {
        "description": "The update endpoint will update a stored WAF configuration in project and not yet but later will also update the Load Balancers that reference it.",
        "operationId": "UpdateWAF",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWAFPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWAFResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "Conflict with current state"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update a WAF configuration",
        "x-stackit-authorization": {
          "actions": [
            "alb.waf.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://alb-waf.api.stackit.cloud",
      "variables": {
        "region": {
          "default": "global"
        }
      }
    }
  ]
}