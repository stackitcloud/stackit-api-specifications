{
  "components": {
    "schemas": {
      "ActiveHealthCheck": {
        "properties": {
          "healthyThreshold": {
            "description": "Healthy threshold of the health checking",
            "format": "int32",
            "minimum": 1,
            "title": "Healthy threshold",
            "type": "integer"
          },
          "httpHealthChecks": {
            "$ref": "#/components/schemas/HttpHealthChecks"
          },
          "interval": {
            "description": "Interval duration of health checking in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Interval",
            "type": "string"
          },
          "intervalJitter": {
            "description": "Interval duration threshold of the health checking in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Interval threshold",
            "type": "string"
          },
          "timeout": {
            "description": "Active health checking timeout duration in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Timeout",
            "type": "string"
          },
          "unhealthyThreshold": {
            "description": "Unhealthy threshold of the health checking",
            "format": "int32",
            "minimum": 1,
            "title": "Unhealthy threshold",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CertificateConfig": {
        "properties": {
          "certificateIds": {
            "description": "Certificate IDs for TLS termination.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CookiePersistence": {
        "properties": {
          "name": {
            "description": "Cookie is the name of the cookie to use.",
            "type": "string"
          },
          "ttl": {
            "description": "TTL specifies the time-to-live for the cookie.\nThe default value is 0s, and it acts as a session cookie, expiring when the client session ends.\n",
            "example": "120s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "TTL (Time-to-live)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCredentialsPayload": {
        "properties": {
          "displayName": {
            "description": "Credential name",
            "example": "my-metrics-credential",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,251}[0-9a-z])?$",
            "type": "string"
          },
          "password": {
            "description": "A valid password used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "A valid username used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCredentialsResponse": {
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/CredentialsResponse"
          }
        },
        "type": "object"
      },
      "CreateLoadBalancerPayload": {
        "properties": {
          "errors": {
            "description": "Reports all errors a application load balancer has.",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External application load balancer IP address where this application load balancer is exposed. Not changeable after creation.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "There is a maximum listener count of 20.\n\n",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "title": "List of all listeners which will accept traffic.",
            "type": "array"
          },
          "name": {
            "description": "Application Load Balancer name. Not changeable after creation.",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one. Not changeable after creation.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "planId": {
            "description": "Service Plan configures the size of the Application Load Balancer. Currently supported plans are p10, p50, p250 and p750. This list can change in the future where plan ids will be removed and new plans by added. That is the reason this is not an enum.",
            "type": "string"
          },
          "privateAddress": {
            "description": "Transient private application load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region of the LoadBalancer.",
            "example": "eu01",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the application load balancer. Limited to 20.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          },
          "version": {
            "description": "Application Load Balancer resource version.\nMust be empty or unset for creating load balancers, non-empty for updating load balancers. Semantics:\nWhile retrieving load balancers, this is the current version of this application load balancer resource that changes during updates of the load balancers. On updates this field specified the application load balancer version you calculated your update for instead of the future version to enable concurrency safe updates. Update calls will then report the new version in their result as you would see with a application load balancer retrieval call later. There exist no total order of the version, so you can only compare it for equality, but not for less/greater than another version. Since the creation of application load balancer is always intended to create the first version of it, there should be no existing version. That's why this field must by empty of not present in that case.",
            "example": "lb-238165323",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CredentialsResponse": {
        "properties": {
          "credentialsRef": {
            "description": "The credentials reference can be used for observability of the Application Load Balancer.",
            "title": "Credentials reference",
            "type": "string"
          },
          "displayName": {
            "description": "Credential name",
            "example": "my-metrics-credential",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "region": {
            "description": "Region of the Credential",
            "example": "eu01",
            "type": "string"
          },
          "username": {
            "description": "The username used for the ARGUS instance",
            "title": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteCredentialsResponse": {
        "type": "object"
      },
      "DeleteLoadBalancerResponse": {
        "description": "Response for deleting a Application Load Balancer has an empty body if successful.",
        "type": "object"
      },
      "GetCredentialsResponse": {
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/CredentialsResponse"
          }
        },
        "type": "object"
      },
      "GetQuotaResponse": {
        "properties": {
          "maxLoadBalancers": {
            "description": "The maximum number of load balancing servers in this project. Unlimited if set to -1.",
            "format": "int32",
            "maximum": 999,
            "minimum": -1,
            "title": "Application Load Balancer quota",
            "type": "integer"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "eu01",
            "format": "string",
            "pattern": "^[a-z]{2,4}[0-9]{2}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleProtobufAny": {
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.",
        "properties": {
          "@type": {
            "description": "The type of the serialized message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostConfig": {
        "properties": {
          "host": {
            "description": "Hostname to match. Supports wildcards (e.g. *.example.com).",
            "type": "string"
          },
          "rules": {
            "description": "Routing rules under the specified host, matched by path prefix.",
            "items": {
              "$ref": "#/components/schemas/Rule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HttpHeader": {
        "properties": {
          "exactMatch": {
            "description": "Exact match for the header value.",
            "type": "string"
          },
          "name": {
            "description": "Header name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpHealthChecks": {
        "properties": {
          "okStatuses": {
            "description": "List of HTTP status codes that indicate a healthy response",
            "items": {
              "type": "string"
            },
            "maximum": 299,
            "minimum": 200,
            "title": "HTTP Health Checks' status code",
            "type": "array"
          },
          "path": {
            "description": "Path to send the health check request to",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCredentialsResponse": {
        "properties": {
          "credentials": {
            "items": {
              "$ref": "#/components/schemas/CredentialsResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListLoadBalancersResponse": {
        "properties": {
          "loadBalancers": {
            "items": {
              "$ref": "#/components/schemas/LoadBalancer"
            },
            "type": "array"
          },
          "nextPageId": {
            "description": "Continue token from the ListLoadBalancerResponse with Limit option",
            "example": "eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQ1Njk3ODA2LCJzdGFydCI6Im15LWFsYi1uZXdcdTAwMDAifQ",
            "format": "string",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListPlansResponse": {
        "properties": {
          "validPlans": {
            "items": {
              "$ref": "#/components/schemas/PlanDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Listener": {
        "properties": {
          "http": {
            "$ref": "#/components/schemas/ProtocolOptionsHTTP"
          },
          "https": {
            "$ref": "#/components/schemas/ProtocolOptionsHTTPS"
          },
          "name": {
            "description": "Unique, system-generated identifier for the listener. It is derived from the protocol and port.",
            "example": "http-80",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "Port number on which the listener receives incoming traffic.",
            "format": "int32",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "protocol": {
            "description": "Protocol is the highest network protocol we understand to load balance. Currently PROTOCOL_HTTP and PROTOCOL_HTTPS are supported.",
            "enum": [
              "PROTOCOL_UNSPECIFIED",
              "PROTOCOL_HTTP",
              "PROTOCOL_HTTPS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancer": {
        "properties": {
          "errors": {
            "description": "Reports all errors a application load balancer has.",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External application load balancer IP address where this application load balancer is exposed. Not changeable after creation.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "There is a maximum listener count of 20.\n\n",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "title": "List of all listeners which will accept traffic.",
            "type": "array"
          },
          "name": {
            "description": "Application Load Balancer name. Not changeable after creation.",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one. Not changeable after creation.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "planId": {
            "description": "Service Plan configures the size of the Application Load Balancer. Currently supported plans are p10, p50, p250 and p750. This list can change in the future where plan ids will be removed and new plans by added. That is the reason this is not an enum.",
            "type": "string"
          },
          "privateAddress": {
            "description": "Transient private application load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region of the LoadBalancer.",
            "example": "eu01",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the application load balancer. Limited to 20.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          },
          "version": {
            "description": "Application Load Balancer resource version.\nMust be empty or unset for creating load balancers, non-empty for updating load balancers. Semantics:\nWhile retrieving load balancers, this is the current version of this application load balancer resource that changes during updates of the load balancers. On updates this field specified the application load balancer version you calculated your update for instead of the future version to enable concurrency safe updates. Update calls will then report the new version in their result as you would see with a application load balancer retrieval call later. There exist no total order of the version, so you can only compare it for equality, but not for less/greater than another version. Since the creation of application load balancer is always intended to create the first version of it, there should be no existing version. That's why this field must by empty of not present in that case.",
            "example": "lb-238165323",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerError": {
        "properties": {
          "description": {
            "description": "The error description contains additional helpful user information to fix the error state of the application load balancer. For example the IP 45.135.247.139 does not exist in the project, then the description will report: Floating IP \"45.135.247.139\" could not be found.",
            "type": "string"
          },
          "type": {
            "description": "The error type specifies which part of the application load balancer encountered the error. I.e. the API will not check if a provided public IP is actually available in the project. Instead the application load balancer with try to use the provided IP and if not available reports TYPE_FIP_NOT_CONFIGURED error.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "TYPE_INTERNAL",
              "TYPE_QUOTA_SECGROUP_EXCEEDED",
              "TYPE_QUOTA_SECGROUPRULE_EXCEEDED",
              "TYPE_PORT_NOT_CONFIGURED",
              "TYPE_FIP_NOT_CONFIGURED",
              "TYPE_TARGET_NOT_ACTIVE",
              "TYPE_METRICS_MISCONFIGURED",
              "TYPE_LOGS_MISCONFIGURED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerOptions": {
        "description": "Defines any optional functionality you want to have enabled on your application load balancer.",
        "properties": {
          "accessControl": {
            "$ref": "#/components/schemas/LoadbalancerOptionAccessControl"
          },
          "ephemeralAddress": {
            "type": "boolean"
          },
          "observability": {
            "$ref": "#/components/schemas/LoadbalancerOptionObservability"
          },
          "privateNetworkOnly": {
            "description": "Application Load Balancer is accessible only via a private network ip address. Not changeable after creation.",
            "title": "Private Network Only",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionAccessControl": {
        "description": "Use this option to limit the IP ranges that can use the application load balancer.",
        "properties": {
          "allowedSourceRanges": {
            "description": "Application Load Balancer is accessible only from an IP address in this range",
            "items": {
              "type": "string"
            },
            "title": "Application Load Balancer source ranges",
            "type": "array"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionLogs": {
        "properties": {
          "credentialsRef": {
            "description": "Credentials reference for logging. This reference is created via the observability create endpoint and the credential needs to contain the basic auth username and password for the logging solution the push URL points to. Then this enables monitoring via remote write for the Application Load Balancer.",
            "title": "Credentials reference",
            "type": "string"
          },
          "pushUrl": {
            "description": "The ARGUS/Loki remote write Push URL you want the logs to be shipped to.",
            "example": "https://logs.stackit5.argus.eu01.stackit.cloud/instances/\u003cargus-instance-id\u003e/loki/api/v1/push",
            "title": "Push URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionMetrics": {
        "properties": {
          "credentialsRef": {
            "description": "Credentials reference for metrics. This reference is created via the observability create endpoint and the credential needs to contain the basic auth username and password for the metrics solution the push URL points to. Then this enables monitoring via remote write for the Application Load Balancer.",
            "title": "Credentials reference",
            "type": "string"
          },
          "pushUrl": {
            "description": "The ARGUS/Prometheus remote write Push URL you want the metrics to be shipped to.",
            "example": "https://push.metrics.stackit4.argus.eu01.stackit.cloud/instances/\u003cargus-instance-id\u003e/api/v1/receive",
            "title": "Push URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionObservability": {
        "description": "We offer Application Load Balancer metrics observability via ARGUS or external solutions. Not changeable after creation.",
        "properties": {
          "logs": {
            "$ref": "#/components/schemas/LoadbalancerOptionLogs"
          },
          "metrics": {
            "$ref": "#/components/schemas/LoadbalancerOptionMetrics"
          }
        },
        "type": "object"
      },
      "Network": {
        "properties": {
          "networkId": {
            "description": "Openstack network ID",
            "example": "2028e5d4-af4f-45e2-98df-502be37a4317",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          },
          "role": {
            "description": "The role defines how the Application Load Balancer is using the network. Currently only ROLE_LISTENERS_AND_TARGETS is supported.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "ROLE_LISTENERS_AND_TARGETS",
              "ROLE_LISTENERS",
              "ROLE_TARGETS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Path": {
        "properties": {
          "exact": {
            "description": "Exact path match. Only a request path exactly equal to the value will match, e.g. '/foo' matches only '/foo', not '/foo/bar' or '/foobar'.",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix path match. Only matches on full segment boundaries, e.g. '/foo' matches '/foo' and '/foo/bar' but NOT '/foobar'.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanDetails": {
        "properties": {
          "description": {
            "description": "Description",
            "example": "Description for p10",
            "type": "string"
          },
          "flavorName": {
            "description": "Flavor Name",
            "example": "t1.2",
            "type": "string"
          },
          "maxConnections": {
            "description": "Maximum number of concurrent connections per application load balancer VM instance.",
            "format": "int32",
            "title": "Application Load Balancer max supported connections",
            "type": "integer"
          },
          "name": {
            "description": "Service Plan Name",
            "example": "Essential-Network-Load-Balancer-10-EU01",
            "type": "string"
          },
          "planId": {
            "description": "Service Plan Identifier",
            "example": "p10",
            "type": "string"
          },
          "region": {
            "description": "Region this Plan is available in",
            "example": "eu01",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProtocolOptionsHTTP": {
        "properties": {
          "hosts": {
            "description": "Defines routing rules grouped by hostname.",
            "items": {
              "$ref": "#/components/schemas/HostConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProtocolOptionsHTTPS": {
        "properties": {
          "certificateConfig": {
            "$ref": "#/components/schemas/CertificateConfig"
          }
        },
        "type": "object"
      },
      "QueryParameter": {
        "properties": {
          "exactMatch": {
            "description": "Exact match for the parameter value.",
            "type": "string"
          },
          "name": {
            "description": "Parameter name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Rule": {
        "properties": {
          "cookiePersistence": {
            "$ref": "#/components/schemas/CookiePersistence"
          },
          "headers": {
            "description": "Headers for the rule.",
            "items": {
              "$ref": "#/components/schemas/HttpHeader"
            },
            "type": "array"
          },
          "path": {
            "$ref": "#/components/schemas/Path"
          },
          "pathPrefix": {
            "description": "Legacy path prefix match. Optional. If not set, defaults to root path '/'. Cannot be set if 'path' is used. Prefer using 'path.prefix' instead.\nOnly matches on full segment boundaries, e.g. '/foo' matches '/foo' and '/foo/bar' but NOT '/foobar'.",
            "type": "string"
          },
          "queryParameters": {
            "description": "Query Parameters for the rule.",
            "items": {
              "$ref": "#/components/schemas/QueryParameter"
            },
            "type": "array"
          },
          "targetPool": {
            "description": "Reference target pool by target pool name.",
            "example": "my-target-pool",
            "type": "string"
          },
          "webSocket": {
            "description": "If enabled, when client sends an HTTP request with and Upgrade header, indicating the desire to establish a Websocket connection, \nif backend server supports WebSocket, it responds with HTTP 101 status code, switching protocols from HTTP to WebSocket.\nHence the client and the server can exchange data in real-time using one long-lived TCP connection.",
            "example": true,
            "title": "WebSocket",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details.  There is a common set of message types for APIs to use.",
            "items": {
              "$ref": "#/components/schemas/GoogleProtobufAny"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Target": {
        "properties": {
          "displayName": {
            "description": "Target name",
            "example": "my-target",
            "pattern": "^[0-9a-zA-Z](?:(?:[0-9a-zA-Z]|-){0,61}[0-9a-zA-Z])?$",
            "type": "string"
          },
          "ip": {
            "description": "Target IP. Must by unique within a target pool.",
            "example": "192.0.2.5",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetPool": {
        "properties": {
          "activeHealthCheck": {
            "$ref": "#/components/schemas/ActiveHealthCheck"
          },
          "name": {
            "description": "Target pool name",
            "example": "my-target-pool",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,18}[0-9a-z])?$",
            "type": "string"
          },
          "targetPort": {
            "description": "The number identifying the port where each target listens for traffic.",
            "example": 5732,
            "format": "int32",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "targets": {
            "description": "List of all targets which will be used in the pool. Limited to 250.",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "type": "array"
          },
          "tlsConfig": {
            "$ref": "#/components/schemas/TargetPoolTlsConfig"
          }
        },
        "type": "object"
      },
      "TargetPoolTlsConfig": {
        "properties": {
          "customCa": {
            "description": "Specifies a custom Certificate Authority (CA). When provided, the target pool will trust certificates signed by this CA, in addition to any system-trusted CAs. This is useful for scenarios where the target pool needs to communicate with servers using self-signed or internally-issued certificates.",
            "format": "bytes",
            "title": "Custom Certificate Authority",
            "type": "string"
          },
          "enabled": {
            "description": "Enable or disable TLS (Transport Layer Security) for connections to the target pool. When enabled, the load balancer will establish secure connections using TLS to the target pool.",
            "title": "Enabled",
            "type": "boolean"
          },
          "skipCertificateValidation": {
            "description": "Bypass certificate validation for TLS connections to the target pool. This option is insecure.",
            "title": "Skip Certificate Validation",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpdateCredentialsPayload": {
        "properties": {
          "displayName": {
            "description": "Credential name",
            "example": "my-metrics-credential",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,251}[0-9a-z])?$",
            "type": "string"
          },
          "password": {
            "description": "A valid password used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "A valid username used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCredentialsResponse": {
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/CredentialsResponse"
          }
        },
        "type": "object"
      },
      "UpdateLoadBalancerPayload": {
        "properties": {
          "errors": {
            "description": "Reports all errors a application load balancer has.",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External application load balancer IP address where this application load balancer is exposed. Not changeable after creation.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "There is a maximum listener count of 20.\n\n",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "title": "List of all listeners which will accept traffic.",
            "type": "array"
          },
          "name": {
            "description": "Application Load Balancer name. Not changeable after creation.",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one. Not changeable after creation.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "planId": {
            "description": "Service Plan configures the size of the Application Load Balancer. Currently supported plans are p10, p50, p250 and p750. This list can change in the future where plan ids will be removed and new plans by added. That is the reason this is not an enum.",
            "type": "string"
          },
          "privateAddress": {
            "description": "Transient private application load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region of the LoadBalancer.",
            "example": "eu01",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the application load balancer. Limited to 20.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          },
          "version": {
            "description": "Application Load Balancer resource version.\nMust be empty or unset for creating load balancers, non-empty for updating load balancers. Semantics:\nWhile retrieving load balancers, this is the current version of this application load balancer resource that changes during updates of the load balancers. On updates this field specified the application load balancer version you calculated your update for instead of the future version to enable concurrency safe updates. Update calls will then report the new version in their result as you would see with a application load balancer retrieval call later. There exist no total order of the version, so you can only compare it for equality, but not for less/greater than another version. Since the creation of application load balancer is always intended to create the first version of it, there should be no existing version. That's why this field must by empty of not present in that case.",
            "example": "lb-238165323",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateTargetPoolPayload": {
        "properties": {
          "activeHealthCheck": {
            "$ref": "#/components/schemas/ActiveHealthCheck"
          },
          "name": {
            "description": "Target pool name",
            "example": "my-target-pool",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,18}[0-9a-z])?$",
            "type": "string"
          },
          "targetPort": {
            "description": "The number identifying the port where each target listens for traffic.",
            "example": 5732,
            "format": "int32",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "targets": {
            "description": "List of all targets which will be used in the pool. Limited to 250.",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "type": "array"
          },
          "tlsConfig": {
            "$ref": "#/components/schemas/TargetPoolTlsConfig"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "description": "This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.\n\nFor each application load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.",
    "title": "Application Load Balancer API",
    "version": "2beta2.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v2beta2/projects/{projectId}/regions/{region}/credentials": {
      "get": {
        "description": "Lists the stored Observability credentials.",
        "operationId": "ListCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List all credentials in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.credentials.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "post": {
        "description": "Creates and stores credentials for use with Application Load Balancer Observability.\n For example, when using ARGUS, credentials must first be created via the ARGUS API\n and then stored with this endpoint to be used by the Application Load Balancer.",
        "operationId": "CreateCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create credentials for observability of the application load balancer",
        "x-stackit-authorization": {
          "actions": [
            "alb.credentials.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v2beta2/projects/{projectId}/regions/{region}/credentials/{credentialsRef}": {
      "delete": {
        "description": "Deletes the stored Observability credentials.",
        "operationId": "DeleteCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialsRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete a single credential in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.credentials.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "get": {
        "description": "Gets the stored Observability credentials.",
        "operationId": "GetCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialsRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "credential reference not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Get a single credential reference in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.credentials.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "put": {
        "description": "Updates the stored Observability credentials.",
        "operationId": "UpdateCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialsRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCredentialsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "credential reference not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update credentials for observability in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.credentials.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v2beta2/projects/{projectId}/regions/{region}/load-balancers": {
      "get": {
        "description": "Lists all Application Load Balancers in a project.\n Includes details from creation or updates, along with their status and any error descriptions.",
        "operationId": "ListLoadBalancers",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_size specifies how many load balancers should be returned on this page. Must be a positive number \u003c= 1000",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page_id is a page identifier returned by the previous response and is used to request the next page",
            "in": "query",
            "name": "pageId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLoadBalancersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List load balancers in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.loadbalancer.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "post": {
        "description": "Creates an Application Load Balancer.\n The default load balancing algorithm is Maglev, and selecting a different algorithm is currently not supported.",
        "operationId": "CreateLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoadBalancerPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "application load balancer already exists"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create an application load balancer in a project",
        "x-stackit-authorization": {
          "actions": [
            "alb.loadbalancer.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v2beta2/projects/{projectId}/regions/{region}/load-balancers/{name}": {
      "delete": {
        "description": "Deletes the specified Application Load Balancer.",
        "operationId": "DeleteLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLoadBalancerResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete a given load balancer in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.loadbalancer.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "get": {
        "description": "Retrieves details of a specific Application Load Balancer in a project.\n Includes creation and update information, current status, and any error descriptions.",
        "operationId": "GetLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "application load balancer not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Get a single application load balancer in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.loadbalancer.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      },
      "put": {
        "description": "Updates an existing Application Load Balancer by modifying its listeners and target pools.\n Ensure the resource version is current to maintain concurrency safety.\n The default load balancing algorithm is Maglev, and selecting a different algorithm is currently not supported.",
        "operationId": "UpdateLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLoadBalancerPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "Conflict with current state"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update a load balancer in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.loadbalancer.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v2beta2/projects/{projectId}/regions/{region}/load-balancers/{name}/target-pools/{targetPoolName}": {
      "put": {
        "description": "Replaces the content of a specific target pool in the Application Load Balancer (useful for adding or removing target servers).\n Only updates the specified target pool, leaving others unchanged.\n Cannot be used to create or rename target pools.",
        "operationId": "UpdateTargetPool",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "targetPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTargetPoolPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetPool"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update a single target pool of a load balancer in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.targetpool.replace"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v2beta2/projects/{projectId}/regions/{region}/quota": {
      "get": {
        "description": "Retrieves the configured Application Load Balancer quota for the project.\n The default quota is 3.",
        "operationId": "GetQuota",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotaResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this projectId is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Get the quota of application load balancers and target pools in a project.",
        "x-stackit-authorization": {
          "actions": [
            "alb.quota.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.loadbalancer"
            ]
          }
        }
      }
    },
    "/v2beta2/regions/{region}/plans": {
      "get": {
        "description": "Lists the configured service plans for a project.",
        "operationId": "ListPlans",
        "parameters": [
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPlansResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "description": "this projectId is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List available service plans.",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://alb.api.stackit.cloud",
      "variables": {
        "region": {
          "default": "global"
        }
      }
    }
  ]
}