{
  "components": {
    "schemas": {
      "Config": {
        "properties": {
          "backend": {
            "discriminator": {
              "mapping": {
                "http": "#/components/schemas/HttpBackend"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpBackend"
              }
            ]
          },
          "blockedCountries": {
            "description": "Restricts access to your content based on country. \nWe use the ISO 3166-1 alpha-2 standard for country codes (e.g., DE, ES, GB). \nThis setting blocks users from the specified countries.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "blockedIPs": {
            "description": "Restricts access to your content by specifying a list of blocked IPv4 addresses. \nThis feature enhances security and privacy by preventing these addresses from accessing your distribution.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "defaultCacheDuration": {
            "description": "Sets the default cache duration for the distribution. \nThe default cache duration is applied when a 'Cache-Control' header is not presented in the origin's response.\nWe use ISO8601 duration format for cache duration (e.g. P1DT2H30M)\n",
            "nullable": true,
            "type": "string",
            "x-go-type": "string"
          },
          "logSink": {
            "discriminator": {
              "mapping": {
                "loki": "#/components/schemas/LokiLogSink"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/LokiLogSink"
              }
            ]
          },
          "monthlyLimitBytes": {
            "description": "Sets the monthly limit of bandwidth in bytes that the pullzone is allowed to use.\n",
            "format": "int64",
            "minimum": 0,
            "nullable": true,
            "type": "integer",
            "x-go-type": "uint64"
          },
          "optimizer": {
            "$ref": "#/components/schemas/Optimizer"
          },
          "regions": {
            "items": {
              "$ref": "#/components/schemas/Region"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "regions",
          "backend",
          "blockedIPs",
          "blockedCountries"
        ],
        "type": "object"
      },
      "ConfigPatch": {
        "properties": {
          "backend": {
            "discriminator": {
              "mapping": {
                "http": "#/components/schemas/HttpBackendPatch"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpBackendPatch"
              }
            ]
          },
          "blockedCountries": {
            "description": "Restricts access to your content based on country. \nWe use the ISO 3166-1 alpha-2 standard for country codes (e.g., DE, ES, GB). \nThis setting blocks users from the specified countries.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "blockedIPs": {
            "description": "Restricts access to your content by specifying a list of blocked IPv4 addresses. \nThis feature enhances security and privacy by preventing these addresses from accessing your distribution.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "defaultCacheDuration": {
            "description": "Sets the default cache duration for the distribution. \nThe default cache duration is applied when a 'Cache-Control' header is not presented in the origin's response.\nWe use ISO8601 duration format for cache duration (e.g. P1DT2H30M)\n",
            "nullable": true,
            "type": "string",
            "x-go-type": "string"
          },
          "logSink": {
            "discriminator": {
              "mapping": {
                "loki": "#/components/schemas/PatchLokiLogSink"
              },
              "propertyName": "type"
            },
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PatchLokiLogSink"
              }
            ]
          },
          "monthlyLimitBytes": {
            "description": "Sets the monthly limit of bandwidth in bytes that the pullzone is allowed to use.\n",
            "format": "int64",
            "minimum": 0,
            "nullable": true,
            "type": "integer",
            "x-go-type": "uint64"
          },
          "optimizer": {
            "$ref": "#/components/schemas/OptimizerPatch"
          },
          "regions": {
            "items": {
              "$ref": "#/components/schemas/Region"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "CreateDistributionPayload": {
        "properties": {
          "blockedCountries": {
            "description": "Restricts access to your content based on country. \nWe use the ISO 3166-1 alpha-2 standard for country codes (e.g., DE, ES, GB). \nThis setting blocks users from the specified countries.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "blockedIPs": {
            "description": "Restricts access to your content by specifying a list of blocked IPv4 addresses. \nThis feature enhances security and privacy by preventing these addresses from accessing your distribution.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "defaultCacheDuration": {
            "description": "Sets the default cache duration for the distribution. \nThe default cache duration is applied when a 'Cache-Control' header is not presented in the origin's response.\nWe use ISO8601 duration format for cache duration (e.g. P1DT2H30M)\n",
            "type": "string",
            "x-go-type": "string"
          },
          "geofencing": {
            "additionalProperties": {
              "items": {
                "description": "ISO 3166-1 alpha-2 country code (e.g., DE, ES, GB)",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "description": "An object mapping multiple alternative origins to country codes.\n\nAny request from one of those country codes will route to the alternative origin. Do note that\ncountry codes may only be used once. You can not have a country be assigned to multiple alternative origins.\n",
            "type": "object"
          },
          "intentId": {
            "description": "While optional, it is greatly encouraged to provide an `intentId`. \nThis is used to deduplicate requests.  \nIf multiple POST-Requests with the same `intentId` for a given `projectId` are received, all but the first request are dropped.\n",
            "type": "string"
          },
          "logSink": {
            "discriminator": {
              "mapping": {
                "loki": "#/components/schemas/PatchLokiLogSink"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/PatchLokiLogSink"
              }
            ]
          },
          "monthlyLimitBytes": {
            "description": "Sets the monthly limit of bandwidth in bytes that the pullzone is allowed to use.\n",
            "format": "int64",
            "minimum": 0,
            "type": "integer",
            "x-go-type": "uint64"
          },
          "optimizer": {
            "$ref": "#/components/schemas/Optimizer"
          },
          "originRequestHeaders": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Headers that will be sent with every request to the configured origin.\nWARNING: Do not store sensitive values in the headers. The data is stores as plain text.\n",
            "type": "object"
          },
          "originUrl": {
            "description": "The origin of the content that should be made available through the CDN.  \nNote that the path and query parameters are ignored. Ports are allowed. If no protocol is provided, `https` is assumed.  \nSo `www.example.com:1234/somePath?q=123` is normalized to `https://www.example.com:1234`\n",
            "format": "uri",
            "type": "string"
          },
          "regions": {
            "description": "Define in which regions you would like your content to be cached.\n",
            "items": {
              "$ref": "#/components/schemas/Region"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "originUrl",
          "regions"
        ],
        "type": "object"
      },
      "CreateDistributionResponse": {
        "properties": {
          "distribution": {
            "$ref": "#/components/schemas/Distribution"
          }
        },
        "required": [
          "distribution"
        ],
        "type": "object"
      },
      "CustomDomain": {
        "description": "Definition of a custom domain",
        "properties": {
          "errors": {
            "description": "This object is present if the custom domain has errors.",
            "items": {
              "$ref": "#/components/schemas/StatusError"
            },
            "minItems": 1,
            "type": "array"
          },
          "name": {
            "description": "The domain. Can be used as input for the GetCustomDomain endpoint",
            "maxLength": 72,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DomainStatus"
          }
        },
        "required": [
          "name",
          "status"
        ],
        "type": "object"
      },
      "DeleteCustomDomainResponse": {
        "description": "Returns the custom domain that was deleted while the deletion has not completed yet. After the deletion was successful the response will be empty.",
        "properties": {
          "customDomain": {
            "$ref": "#/components/schemas/CustomDomain"
          }
        },
        "type": "object"
      },
      "DeleteDistributionResponse": {
        "properties": {
          "distribution": {
            "$ref": "#/components/schemas/Distribution"
          }
        },
        "type": "object"
      },
      "Distribution": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/Config"
          },
          "createdAt": {
            "description": "RFC3339 string defining when the distribution was created",
            "format": "date-time",
            "type": "string"
          },
          "domains": {
            "items": {
              "$ref": "#/components/schemas/Domain"
            },
            "type": "array",
            "uniqueItems": true
          },
          "errors": {
            "description": "This object may be present if, and only if the distribution has encountered an error state.\n",
            "items": {
              "$ref": "#/components/schemas/StatusError"
            },
            "minItems": 1,
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "status": {
            "description": "- `CREATING`: The distribution was just created. \n  All the relevant resources are created in the background. Once fully reconciled,\n  this switches to `ACTIVE`. If there are any issues, the status changes to \n  `ERROR`. You can look at the `errors` array to get more infos.\n- `ACTIVE`: The usual state. The desired configuration is synced, there are no errors\n- `UPDATING`: The state when there is a discrepancy between the desired and \n  actual configuration state. This occurs right after an update. Will switch to \n  `ACTIVE` or `ERROR`, depending on if synchronizing succeeds or not.\n- `DELETING`: The state right after a delete request was received. The distribution will stay in this status\n  until all resources have been successfully removed, or until we encounter an `ERROR` state.\n\n  **NOTE:** You can keep fetching the distribution while it is deleting. \n  After successful deletion, trying to get a distribution will return a 404 Not Found response\n- `ERROR`: The error state. Look at the `errors` array for more info.\n",
            "enum": [
              "CREATING",
              "ACTIVE",
              "UPDATING",
              "DELETING",
              "ERROR"
            ],
            "type": "string"
          },
          "updatedAt": {
            "description": "RFC3339 string which returns the last time the distribution configuration was modified.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "projectId",
          "createdAt",
          "updatedAt",
          "config",
          "status",
          "domains"
        ],
        "type": "object"
      },
      "DistributionLogsRecord": {
        "properties": {
          "cacheHit": {
            "type": "boolean"
          },
          "dataCenterRegion": {
            "type": "string"
          },
          "distributionID": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "requestCountryCode": {
            "description": "ISO 3166-1 A2 compliant country code",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "size": {
            "format": "int64",
            "minimum": 0,
            "type": "integer",
            "x-go-type": "uint64"
          },
          "statusCode": {
            "format": "int32",
            "type": "integer"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "distributionID",
          "statusCode",
          "path",
          "cacheHit",
          "timestamp",
          "size",
          "requestCountryCode",
          "dataCenterRegion",
          "host"
        ]
      },
      "DistributionStatisticsRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DistributionStatisticsRecordEntry"
          },
          {
            "properties": {
              "end": {
                "description": "Exclusive end of the time interval the statistics refer to",
                "format": "date-time",
                "type": "string"
              },
              "regions": {
                "$ref": "#/components/schemas/DistributionStatisticsRecordRegions"
              },
              "start": {
                "description": "Start of the time interval the statistics refer to",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "start",
              "end",
              "regions"
            ],
            "type": "object"
          }
        ],
        "description": "Aggregated statistics of a distribution during a time interval",
        "required": [
          "start",
          "end",
          "totalTrafficBytes",
          "totalRequests",
          "cachedRequests",
          "regions"
        ]
      },
      "DistributionStatisticsRecordEntry": {
        "properties": {
          "cachedRequests": {
            "description": "Number of cached requests that were served",
            "format": "int64",
            "type": "integer",
            "x-go-type": "uint64"
          },
          "totalRequests": {
            "description": "Total number of requests that were served",
            "format": "int64",
            "type": "integer",
            "x-go-type": "uint64"
          },
          "totalTrafficBytes": {
            "description": "Total traffic in bytes that occurred during the time interval",
            "format": "int64",
            "type": "integer",
            "x-go-type": "uint64"
          }
        },
        "required": [
          "totalTrafficBytes",
          "totalRequests",
          "cachedRequests"
        ],
        "type": "object"
      },
      "DistributionStatisticsRecordRegions": {
        "description": "Mapping of regions to the metrics for this region for the defined time interval\nAll regions are always present. If no traffic was reported for a region, it will \nstill contain 0-filled properties\n",
        "properties": {
          "AF": {
            "$ref": "#/components/schemas/DistributionStatisticsRecordEntry"
          },
          "ASIA": {
            "$ref": "#/components/schemas/DistributionStatisticsRecordEntry"
          },
          "EU": {
            "$ref": "#/components/schemas/DistributionStatisticsRecordEntry"
          },
          "SA": {
            "$ref": "#/components/schemas/DistributionStatisticsRecordEntry"
          },
          "US": {
            "$ref": "#/components/schemas/DistributionStatisticsRecordEntry"
          }
        },
        "required": [
          "EU",
          "US",
          "AF",
          "SA",
          "ASIA"
        ],
        "type": "object"
      },
      "Domain": {
        "description": "Definition of a custom or managed domain without any certificates or keys",
        "properties": {
          "errors": {
            "description": "This object is present if the custom domain has errors.",
            "items": {
              "$ref": "#/components/schemas/StatusError"
            },
            "minItems": 1,
            "type": "array"
          },
          "name": {
            "description": "The domain. If this is a custom domain, you can call the GetCustomDomain Endpoint",
            "maxLength": 72,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DomainStatus"
          },
          "type": {
            "description": "Specifies the type of this Domain. Custom Domain can be further queries using the GetCustomDomain Endpoint",
            "enum": [
              "managed",
              "custom"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "status"
        ],
        "type": "object"
      },
      "DomainStatus": {
        "description": "The status of the domain: CREATING indicates that the custom domain is being set up. UPDATING means that requested changes are being applied to the custom domain. ACTIVE means the custom domain is currently configured and active. DELETING means that the domain is in the process of being removed from the distribution. In case the domain has the ERROR state, more information will be available in the errors list.",
        "enum": [
          "CREATING",
          "ACTIVE",
          "UPDATING",
          "DELETING",
          "ERROR"
        ],
        "type": "string"
      },
      "ErrorDetails": {
        "properties": {
          "de": {
            "description": "German description of the error",
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "deprecated": true,
            "minLength": 1,
            "type": "string"
          },
          "en": {
            "description": "English description of the error",
            "minLength": 1,
            "type": "string"
          },
          "field": {
            "description": "Optional field in the request this error detail refers to",
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "enum": [
              "UNKNOWN",
              "CUSTOM_DOMAIN_CNAME_MISSING",
              "INVALID_ARGUMENT"
            ],
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "key",
          "description",
          "en"
        ],
        "type": "object"
      },
      "FindCachePathsResponse": {
        "properties": {
          "response": {
            "items": {
              "$ref": "#/components/schemas/FindCachePathsResponseEntry"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "response"
        ],
        "type": "object"
      },
      "FindCachePathsResponseEntry": {
        "properties": {
          "path": {
            "description": "Defines one path that was previously used as part of a granular purge",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "type": "object"
      },
      "GenericJSONResponse": {
        "properties": {
          "details": {
            "description": "Listing of issues with your request",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            },
            "minLength": 1,
            "type": "array"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "GetCacheInfoResponse": {
        "properties": {
          "history": {
            "items": {
              "$ref": "#/components/schemas/GetCacheInfoResponseHistoryEntry"
            },
            "type": "array",
            "uniqueItems": true
          },
          "lastPurgeTime": {
            "description": "Returns the last time the cache was purged by calling the PurgeCache endpoint. \nTime represented as RFC3339 compliant string. If the cache was never purged, this returns `null`\n",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "lastPurgeTime",
          "history"
        ],
        "type": "object"
      },
      "GetCacheInfoResponseHistoryEntry": {
        "properties": {
          "occuredAt": {
            "deprecated": true,
            "format": "date-time",
            "type": "string"
          },
          "occurredAt": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "enum": [
              "full",
              "granular"
            ],
            "type": "string"
          }
        },
        "required": [
          "occuredAt",
          "occurredAt",
          "type"
        ],
        "type": "object"
      },
      "GetCustomDomainCustomCertificate": {
        "description": "Returned if a custom certificate is used. Response does not contain the certificate or key.",
        "properties": {
          "type": {
            "type": "string"
          },
          "version": {
            "description": "Whenever a new custom certificate is added the version is increased by 1.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "type",
          "version"
        ],
        "type": "object"
      },
      "GetCustomDomainManagedCertificate": {
        "description": "This is returned when no custom certificate is used. We provision and manage a Let's Encrypt Certificate for you",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "GetCustomDomainResponse": {
        "properties": {
          "certificate": {
            "discriminator": {
              "mapping": {
                "custom": "#/components/schemas/GetCustomDomainCustomCertificate",
                "managed": "#/components/schemas/GetCustomDomainManagedCertificate"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetCustomDomainManagedCertificate"
              },
              {
                "$ref": "#/components/schemas/GetCustomDomainCustomCertificate"
              }
            ]
          },
          "customDomain": {
            "$ref": "#/components/schemas/CustomDomain"
          },
          "domain": {
            "deprecated": true,
            "maxLength": 72,
            "pattern": "^[.\\-A-Za-z0-9]*$",
            "type": "string"
          }
        },
        "required": [
          "domain",
          "customDomain",
          "certificate"
        ],
        "type": "object"
      },
      "GetDistributionResponse": {
        "properties": {
          "distribution": {
            "$ref": "#/components/schemas/Distribution"
          }
        },
        "required": [
          "distribution"
        ],
        "type": "object"
      },
      "GetLogsResponse": {
        "properties": {
          "logs": {
            "items": {
              "$ref": "#/components/schemas/DistributionLogsRecord"
            },
            "type": "array"
          },
          "nextPageIdentifier": {
            "type": "string"
          }
        },
        "required": [
          "logs"
        ]
      },
      "GetLogsSearchFiltersResponse": {
        "properties": {
          "filters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "filters"
        ]
      },
      "GetStatisticsResponse": {
        "properties": {
          "records": {
            "items": {
              "$ref": "#/components/schemas/DistributionStatisticsRecord"
            },
            "type": "array"
          }
        },
        "required": [
          "records"
        ]
      },
      "HttpBackend": {
        "properties": {
          "geofencing": {
            "additionalProperties": {
              "items": {
                "description": "ISO 3166-1 alpha-2 country code (e.g., DE, ES, GB)",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "description": "An object mapping multiple alternative origins to country codes.\n\nAny request from one of those country codes will route to the alternative origin. Do note that\ncountry codes may only be used once. You cannot have a country be assigned to multiple alternative origins.\n",
            "type": "object"
          },
          "originRequestHeaders": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Headers that will be sent with every request to the configured origin.\n\n**WARNING**: Do not store sensitive values in the headers. \nThe configuration is stored as plain text.\n",
            "type": "object"
          },
          "originUrl": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "originUrl",
          "originRequestHeaders",
          "geofencing"
        ],
        "type": "object"
      },
      "HttpBackendPatch": {
        "description": "A partial HTTP Backend",
        "properties": {
          "geofencing": {
            "additionalProperties": {
              "items": {
                "description": "ISO 3166-1 alpha-2 country code (e.g., DE, ES, GB)",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "description": "An object mapping multiple alternative origins to country codes.\n\nAny request from one of those country codes will route to the alternative origin. Do note that\ncountry codes may only be used once. You cannot have a country be assigned to multiple alternative origins.\n",
            "type": "object"
          },
          "originRequestHeaders": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Headers that will be sent with every request to the configured origin.\n\n**WARNING**: Do not store sensitive values in the headers. \nThe configuration is stored as plain text.\n",
            "type": "object"
          },
          "originUrl": {
            "format": "uri",
            "type": "string"
          },
          "type": {
            "description": "This property is required to determine the used backend type.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ListDistributionsResponse": {
        "properties": {
          "distributions": {
            "items": {
              "$ref": "#/components/schemas/Distribution"
            },
            "type": "array"
          },
          "nextPageIdentifier": {
            "type": "string"
          }
        },
        "required": [
          "distributions"
        ],
        "type": "object"
      },
      "LokiLogSink": {
        "properties": {
          "pushUrl": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "pushUrl"
        ],
        "type": "object"
      },
      "Optimizer": {
        "description": "Optimizer is paid feature, a real-time on the fly image manipulation and optimization service that automatically optimizes your images for faster image delivery.\n",
        "properties": {
          "enabled": {
            "description": "Determines if the optimizer should be enabled for this distribution and incurs a monthly fee",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "OptimizerPatch": {
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PatchDistributionPayload": {
        "description": "Defines a partial distribution. Set values ",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/ConfigPatch"
          },
          "intentId": {
            "description": "While optional, it is greatly encouraged to provide an `intentId`. \nThis is used to deduplicate requests.  \nIf multiple modifying requests with the same `intentId` for a given `projectId` are received, all but the first request are dropped.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatchDistributionResponse": {
        "properties": {
          "distribution": {
            "$ref": "#/components/schemas/Distribution"
          }
        },
        "required": [
          "distribution"
        ],
        "type": "object"
      },
      "PatchLokiLogSink": {
        "properties": {
          "password": {
            "type": "string",
            "x-go-type": "secret.Secret"
          },
          "pushUrl": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "x-go-type": "secret.Secret"
          }
        },
        "required": [
          "type",
          "pushUrl",
          "username",
          "password"
        ],
        "type": "object"
      },
      "PurgeCachePayload": {
        "properties": {
          "path": {
            "description": "Defines an optional path. If this is set, a granular purge is done. If missing, the entire cache is invalidated. \nDuring a granular cache purge, only the provided path is purged. \n\nPlease do not that for example `/some/path` and `/some/path.txt` are considered different paths.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PurgeCacheResponse": {
        "type": "object"
      },
      "PutCustomDomainCustomCertificate": {
        "description": "Returned if a custom certificate is used. Response does not contain the certificate or key.",
        "properties": {
          "certificate": {
            "description": "base64-encoded PEM-encoded certificate",
            "type": "string"
          },
          "key": {
            "description": "base64-encoded PEM encoded key",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "certificate",
          "key"
        ],
        "type": "object"
      },
      "PutCustomDomainManagedCertificate": {
        "description": "This is returned when no custom certificate is used. We provision and manage a Let's Encrypt Certificate for you",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "PutCustomDomainPayload": {
        "properties": {
          "certificate": {
            "description": "Pass a custom certificate to be served by the CDN when calling the custom domain. Will use a managed certificate when omitted",
            "discriminator": {
              "mapping": {
                "custom": "#/components/schemas/PutCustomDomainCustomCertificate",
                "managed": "#/components/schemas/PutCustomDomainManagedCertificate"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/PutCustomDomainManagedCertificate"
              },
              {
                "$ref": "#/components/schemas/PutCustomDomainCustomCertificate"
              }
            ],
            "type": "object"
          },
          "intentId": {
            "description": "While optional, it is greatly encouraged to provide an `intentId`. \nThis is used to deduplicate requests.  \nIf multiple modifying Requests with the same `intentId` for a given `projectId` are received, all but the first request are dropped.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PutCustomDomainResponse": {
        "properties": {
          "certificate": {
            "description": "Pass a custom certificate to be served by the CDN when calling the custom domain. Will use a managed certificate when omitted",
            "discriminator": {
              "mapping": {
                "custom": "#/components/schemas/GetCustomDomainCustomCertificate",
                "managed": "#/components/schemas/GetCustomDomainManagedCertificate"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetCustomDomainManagedCertificate"
              },
              {
                "$ref": "#/components/schemas/GetCustomDomainCustomCertificate"
              }
            ],
            "type": "object"
          },
          "customDomain": {
            "$ref": "#/components/schemas/CustomDomain"
          },
          "domain": {
            "deprecated": true,
            "maxLength": 72,
            "pattern": "^[.\\-A-Za-z0-9]*$",
            "type": "string"
          }
        },
        "required": [
          "domain",
          "customDomain"
        ],
        "type": "object"
      },
      "Region": {
        "description": "The following regions exist:\n- `EU` - Europe\n- `US` - United States / North America\n- `AF` - Africa\n- `SA` - South America\n- `ASIA` - Asia and Oceania\n",
        "enum": [
          "EU",
          "US",
          "AF",
          "SA",
          "ASIA"
        ],
        "format": "enum",
        "type": "string"
      },
      "StatusError": {
        "properties": {
          "de": {
            "description": "A german translation string corresponding to the error key. Note that we do not guarantee german translations are present.",
            "minLength": 1,
            "type": "string"
          },
          "en": {
            "description": "An english translation string corresponding to the error key. An english translation key is always present.",
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "description": "An enum value that describes a Status Error.",
            "enum": [
              "UNKNOWN",
              "CUSTOM_DOMAIN_CNAME_MISSING",
              "CUSTOM_DOMAIN_ALREADY_IN_USE",
              "PUBLIC_BETA_QUOTA_REACHED"
            ],
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "en",
          "key"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "description": "API used to create and manage your CDN distributions.",
    "title": "CDN API",
    "version": "1beta.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1beta/projects/{projectId}/distributions": {
      "get": {
        "description": "ListDistributions returns a list of all CDN distributions associated with \na given project, ordered by their distribution ID.\n",
        "operationId": "ListDistributions",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Quantifies how many distributions should be returned on this \npage. Must be a natural number between 1 and 100 (inclusive)\n",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Identifier is returned by the previous response and is used to request the next page.\n\nAs the `pageIdentifier` encodes an element, inserts during pagination will *not* shift the result.\nSo a scenario like:  \n- Start listing first page\n- Insert new element\n- Start listing second page\nwill *never* result in an element from the first page to get \"pushed\" to the second page, like it could \noccur with basic limit + offset pagination.\n\nThe identifier should be treated as an opaque string and never modified. Only pass values returned by the API.\n",
            "in": "query",
            "name": "pageIdentifier",
            "schema": {
              "example": "CiQ0NjExMDY1MS1kNDQ1LTQ3NjgtOTc3YS00MTIzMjlmMjliYjYgAQ",
              "type": "string"
            }
          },
          {
            "description": "The following sort options exist. We default to `createdAt`\n- `id` - Sort by distribution ID using String comparison\n- `updatedAt` - Sort by when the distribution configuration was last modified, \n  for example by changing the regions or response headers\n- `createdAt` - Sort by when the distribution was initially created.\n- `originUrl` - Sort by originURL using String comparison\n- `status` - Sort by distribution status, using String comparison\n- `originUrlRelated` - The origin URL is segmented and reversed before sorting. E.g. `www.example.com` is converted to `com.example.www` for sorting. This way, distributions pointing to the same domain trees are grouped next to each other.\n",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "default": "createdAt",
              "enum": [
                "id",
                "updatedAt",
                "createdAt",
                "originUrl",
                "status",
                "originUrlRelated"
              ],
              "format": "enum",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "enum": [
                "ascending",
                "descending"
              ],
              "format": "enum",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "content - no extra pages": {
                    "description": "There are distributions present, but not enough to start a new page.\nBecause of that no `nextPageIdentifier` is present.\n",
                    "value": {
                      "distributions": [
                        {
                          "config": {
                            "backend": {
                              "originRequestHeaders": {},
                              "originUrl": "https://httpbin.org",
                              "type": "http"
                            },
                            "regions": [
                              "EU",
                              "ASIA"
                            ]
                          },
                          "createdAt": "2024-09-26T09:00:00.12345Z",
                          "domains": [],
                          "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                          "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                          "status": "CREATING",
                          "updatedAt": "2024-09-26T09:00:00.12345Z"
                        },
                        {
                          "config": {
                            "backend": {
                              "originRequestHeaders": {},
                              "originUrl": "https://httpbin.org",
                              "type": "http"
                            },
                            "regions": [
                              "EU",
                              "ASIA"
                            ]
                          },
                          "createdAt": "2024-08-26T09:00:00.12345Z",
                          "domains": [
                            {
                              "name": "hwx6z5y5msddf57g0zg22c2pkr.aa.dev.cdn.onstackit.cloud",
                              "type": "managed"
                            }
                          ],
                          "id": "8bfaecd1-f880-4fa1-1234-1fb492aa4647",
                          "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                          "status": "ACTIVE",
                          "updatedAt": "2024-08-26T09:00:00.12345Z"
                        }
                      ]
                    }
                  },
                  "content - with extra pages": {
                    "description": "There are distributions present, with more distributions on subsequent pages. \nAs such, the `nextPageIdentifier` is present.\n",
                    "value": {
                      "distributions": [
                        {
                          "config": {
                            "backend": {
                              "originRequestHeaders": {
                                "exampleHeader": "Example Value"
                              },
                              "originUrl": "https://httpbin.org",
                              "type": "http"
                            },
                            "regions": [
                              "EU",
                              "ASIA"
                            ]
                          },
                          "createdAt": "2024-09-26T09:00:00.12345Z",
                          "domains": [],
                          "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                          "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                          "status": "CREATING",
                          "updatedAt": "2024-09-26T09:00:00.12345Z"
                        },
                        {
                          "config": {
                            "backend": {
                              "originRequestHeaders": {},
                              "originUrl": "https://httpbin.org",
                              "type": "http"
                            },
                            "regions": [
                              "EU",
                              "ASIA"
                            ]
                          },
                          "createdAt": "2024-08-26T09:00:00.12345Z",
                          "domains": [
                            {
                              "name": "hwx6z5y5msddf57g0zg22c2pkr.aa.dev.cdn.onstackit.cloud",
                              "type": "managed"
                            }
                          ],
                          "id": "8bfaecd1-f880-4fa1-1234-1fb492aa4647",
                          "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                          "status": "ACTIVE",
                          "updatedAt": "2024-08-26T09:00:00.12345Z"
                        }
                      ],
                      "nextPageIdentifier": "CiQ0NjExMDY1MS1kNDQ1LTQ3NjgtOTc3YS00MTIzMjlmMjliYjYgAQ"
                    }
                  },
                  "empty": {
                    "description": "If no distributions are assigned to a project, this returns an empty list.\n\n**NOTE: An empty list is not returned as a 404. The 'resource' exists, it just happens to be empty**\n\nBecause no further pages are available, there is no `nextPageIdentifier`\n",
                    "value": {
                      "distributions": []
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListDistributionsResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "List all distributions belonging to a specific project",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "post": {
        "description": "CreateDistribution will create a new CDN distribution",
        "operationId": "CreateDistribution",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "standard distribution": {
                  "description": "Creates a standard distribution which is cached in `EU` and `ASIA`.\nThe upstream host for this example is `httpbin.org`.\nNote how the protocol (`https`) was omitted here. \nIn this case, it defaults to `https`.\n",
                  "value": {
                    "originUrl": "httpbin.org",
                    "regions": [
                      "EU",
                      "ASIA"
                    ]
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/CreateDistributionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "created": {
                    "description": "The distribution in its initial state. \nThis will have the status `CREATING`.\n\nUsing the `GET` endpoint and the `id` you can poll the status of the distribution.\nMore info about the contents can be found in the *Get distribution by ID* response example.\n",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "CREATING",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreateDistributionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "bad request"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create new distribution",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}": {
      "delete": {
        "description": "DeleteDistribution accepts a project- and distribution-ID and will delete a distribution.\n",
        "operationId": "DeleteDistribution",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "While optional, it is greatly encouraged to provide an `intentId`. \nThis is used to deduplicate requests.  \nIf multiple DELETE-Requests with the same `intentId` are received, all but the first request are dropped.\n",
            "in": "query",
            "name": "intentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "deleted": {
                    "description": "In case the distribution has already finished deleting, an empty response is returned",
                    "value": {}
                  },
                  "deleting": {
                    "description": "Similar to `UPDATING`, this status is set when a Delete-Request was received.\nIt will remain with this status until the deletion was synchronized.\n\nOnce synchronized, the distribution is deleted. \nFurther attempts to delete this response will return an empty response.\n",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "DELETING",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DeleteDistributionResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete distribution",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "get": {
        "description": "This returns a specific distribution by its ID. If no distribution with the given ID exists the endpoint returns 404. Trying to get a deleted distributions also return 404.",
        "operationId": "GetDistribution",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "active": {
                    "description": "After a CDN distribution was created and properly initialized, \nit switches into the `ACTIVE` status.  \nThe notable difference is the `domains` field is populated and contains\nthe STACKIT CDN domain through which your content is made available.\n",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [
                          {
                            "name": "hwx6z5y5msddf57g0zg22c2pkr.aa.dev.cdn.onstackit.cloud",
                            "type": "managed"
                          }
                        ],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "ACTIVE",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  },
                  "creating": {
                    "description": "The distribution is in status \"creating\" while provisioning the resource. It is not ready to use yet.\n",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "CREATING",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  },
                  "deleting": {
                    "description": "Similar to `UPDATING`, this status is set when a Delete-Request was received.\nIt will remain with this status until the deletion was synchronized.\n\nOnce synchronized, the distribution is deleted. \nFurther attempts to get this distributions result in a 404.\n",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "DELETING",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  },
                  "updating": {
                    "description": "This status is set after a modification \non the configuration was issued until the update was synchronized.\n\nOnce synchronized, the status goes back to `ACTIVE`.\n",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "UPDATING",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetDistributionResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "The distribution was not found. It either never existed or was deleted."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Get distribution by ID",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "patch": {
        "description": "Modify a CDN distribution with a partial update. Only the fields specified in the request will be modified.",
        "operationId": "PatchDistribution",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "error - empty patch": {
                  "description": "Trying to do an empty patch will result in a 422 Response. No changes will be pushed",
                  "value": {}
                },
                "error - patch with no changes": {
                  "description": "Changing backend type is currently *not supported*. If the patch only contains the type, it will also return a 422 as no changes are pushed",
                  "value": {
                    "config": {
                      "backend": {
                        "type": "http"
                      }
                    }
                  }
                },
                "originURL and regions": {
                  "description": "Both regions and originURL are modified in the same Patch Request",
                  "value": {
                    "config": {
                      "backend": {
                        "originUrl": "https://newOrigin.com",
                        "type": "http"
                      },
                      "regions": [
                        "EU",
                        "SA"
                      ]
                    },
                    "intentId": "someIntent"
                  }
                },
                "originURL only": {
                  "description": "Only the originURL (http backend) is modified",
                  "value": {
                    "config": {
                      "backend": {
                        "originUrl": "https://newOrigin.com",
                        "type": "http"
                      }
                    },
                    "intentId": "someIntent"
                  }
                },
                "regions only": {
                  "description": "Regions are modified",
                  "value": {
                    "config": {
                      "regions": [
                        "EU",
                        "SA"
                      ]
                    },
                    "intentId": "someIntent"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/PatchDistributionPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "The update was successful. The response body contains the updated distribution.",
                    "value": {
                      "distribution": {
                        "config": {
                          "backend": {
                            "originRequestHeaders": {},
                            "originUrl": "https://httpbin.org",
                            "type": "http"
                          },
                          "regions": [
                            "EU",
                            "ASIA"
                          ]
                        },
                        "createdAt": "2024-09-26T09:00:00.12345Z",
                        "domains": [],
                        "id": "8bfaecd1-f880-4fa1-9884-1fb492aa4647",
                        "projectId": "d043e216-af6e-445f-b5a5-cd67b2593278",
                        "status": "CREATING",
                        "updatedAt": "2024-09-26T09:00:00.12345Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PatchDistributionResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Update existing distribution",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/cache": {
      "get": {
        "description": "Return caching info metadata, which contains the last cache purging time and a history of the most recent *full* purges.\n\nIf (and only if) you provide the path query parameter, the history will also contain granular cache purges. \nThe request will not fail if no data about a path is found.\n",
        "operationId": "GetCacheInfo",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "purgePath",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "hasData": {
                    "description": "Request was successful, returning the last time the entire cache was purged",
                    "value": {
                      "history": [
                        {
                          "occurredAt": "2024-11-29T12:34:56Z",
                          "type": "full"
                        }
                      ],
                      "lastPurgeTime": "2024-11-29T12:34:56Z"
                    }
                  },
                  "noPurgeBefore": {
                    "description": "PurgeCache was never called before, hence no lastPurgeTime is set",
                    "value": {
                      "history": [],
                      "lastPurgeTime": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetCacheInfoResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Get Infos about the Caching State",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/cache/paths": {
      "get": {
        "description": "This returns paths that are present in the cache purging history. \nOnly substrings of the provided input are returned. \nThe response is sorted in descending order by the most recent purge.\n\nSo, assuming you have have the following purged for a distribution\n- `/test/1` at `2025-01-01`\n- `/test/2` at `2025-01-02`\n- `/someOtherPath/1` at `2025-01-03`\n- `/test/1` at `2025-01-04`\n- `/test/3` at `2025-01-05`,\nthis would return the following paths, in the following order, assuming `/te` was the search parameter:\n- `/test/3`\n- `/test/1`\n- `/test/2`\n",
        "operationId": "FindCachePaths",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "A substring of the search query.\n",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "hasData": {
                    "description": "There are some paths that were purged for the current distribution and\nmatch the user-provided search string. The response is sorted time-descending\nby the last time said path was purged. There are no duplicates in the response.\n",
                    "value": {
                      "response": [
                        {
                          "path": "/some/path"
                        },
                        {
                          "path": "/some/path/123"
                        }
                      ]
                    }
                  },
                  "noPaths": {
                    "description": "There are no paths that match the substring that the user provided",
                    "value": {
                      "response": []
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FindCachePathsResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Return Paths that were purged",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/cache/purge": {
      "post": {
        "description": "Clear the cache for this distribution. \nAll content, regardless of its staleness, will get refetched from the host.\n",
        "operationId": "PurgeCache",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "full purge": {
                  "description": "Purges the entire distribution cache",
                  "value": {}
                },
                "granular purge": {
                  "description": "Purges the path /example/path from the cache.",
                  "value": {
                    "path": "/example/path"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/PurgeCachePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Request was successful, which is indicated by the Status code. No data is returned",
                    "value": {}
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PurgeCacheResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Clear distribution cache",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/customDomains/{domain}": {
      "delete": {
        "description": "Removes a custom domain\n",
        "operationId": "DeleteCustomDomain",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "maxLength": 72,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "intentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Custom Domain was deleted",
                    "value": {}
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomDomainResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Delete a custom domain",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "get": {
        "description": "Returns a 200 and the custom domain if this custom domain was associated to this distribution, else 404\n",
        "operationId": "GetCustomDomain",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "maxLength": 72,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Custom Domain was returned",
                    "value": {
                      "domain": "example.com"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetCustomDomainResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "not found - This custom domain does not exist"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retrieve a specific custom domain",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "put": {
        "description": "Creates a new custom domain. If it already exists, this will overwrite the previous custom domain's properties.\n",
        "operationId": "PutCustomDomain",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "format": "domain",
              "maxLength": 72,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutCustomDomainPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Custom Domain was returned",
                    "value": {
                      "domain": "example.com"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PutCustomDomainResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Create or update a custom domain",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/logs": {
      "get": {
        "operationId": "GetLogs",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Your CDN distribution ID",
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "the start of the time range for which logs should be returned",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "the end of the time range for which logs should be returned. If not specified, \n\"now\" is used.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Quantifies how many log entries should be returned on this \npage. Must be a natural number between 1 and 1000 (inclusive)\n",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Identifier is returned by the previous response and is used to request the next page.\n\nAs the `pageIdentifier` encodes an element, inserts during pagination will *not* shift the result.\nSo a scenario like:  \n- Start listing first page\n- Insert new element\n- Start listing second page\nwill *never* result in an element from the first page to get \"pushed\" to the second page, like it could \noccur with basic limit + offset pagination.\n\nThe identifier should be treated as an opaque string and never modified. Only pass values returned by the API.\n",
            "in": "query",
            "name": "pageIdentifier",
            "schema": {
              "example": "CiQ0NjExMDY1MS1kNDQ1LTQ3NjgtOTc3YS00MTIzMjlmMjliYjYgAQ",
              "type": "string"
            }
          },
          {
            "description": "Sorts the log messages by a specific field. Defaults to `timestamp`.\n\nSupported sort options:\n- `timestamp`\n- `dataCenterRegion`\n- `requestCountryCode`\n- `statusCode`\n- `cacheHit`\n- `size`\n- `path`\n- `host`\n",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "default": "timestamp",
              "enum": [
                "timestamp",
                "dataCenterRegion",
                "requestCountryCode",
                "statusCode",
                "cacheHit",
                "size",
                "path",
                "host"
              ],
              "format": "enum",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "enum": [
                "ascending",
                "descending"
              ],
              "format": "enum",
              "type": "string"
            }
          },
          {
            "description": "Filters by the CDN data center region that served the request. Can be combined with other filters\n",
            "in": "query",
            "name": "dataCenterRegion",
            "schema": {
              "example": "AMS",
              "type": "string"
            }
          },
          {
            "description": "Filters by the originating country of the user request. Can be combined with other filters\n",
            "in": "query",
            "name": "requestCountryCode",
            "schema": {
              "example": "DE",
              "type": "string"
            }
          },
          {
            "description": "Filters by the HTTP status code returned to the client. Can be combined with other filters\n",
            "in": "query",
            "name": "statusCode",
            "schema": {
              "example": 202,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filters based on whether the request was served from the CDN cache. Can be combined with other filters\n",
            "in": "query",
            "name": "cacheHit",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLogsResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retrieve distribution logs",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/logs/searchFilters": {
      "get": {
        "operationId": "GetLogsSearchFilters",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Your CDN distribution ID",
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Required filter for search suggestions (e.g., status=4, requestCountry, cacheHit=tru, dataCenterRegion). The filter query cannot be empty.",
            "in": "query",
            "name": "filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLogsSearchFiltersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Invalid request. Please check your queries or parameters."
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Get relevant search filters for this distribution based on user input",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/distributions/{distributionId}/statistics": {
      "get": {
        "description": "Returns the statistics of the distribution in the given\ntime range. The response is a list of statistics records. Each record aggregates the statistics for its time interval.\nIn case no statistics for a time interval exist, no record is returned.\nThe time range for which statistics should be returned can be configured using query parameters.\n\nTimestamps are assumed to be UTC. This is especially important for the \"buckets\" when you, for example, return daily information. A day always starts and ends at 00:00Z.\n\n**Important Note:** Lower bounds are inclusive, upper bounds are exclusive. If you, for example, want a daily grouped which starts on the 1st Jan and also contains the full 10th Jan day, you would define `2025-01-01T00:00:00Z` as the lower and `2025-01-11T00:00:00Z` as the upper bound.\n\nThe upper bound is optional. If you omit it, the API will use the start of the next interval as the upper bound.  \nExample: if `interval` is `hourly`, `from` would default to the start of the next hour, if it's `daily`, `from` would default to the start of the next day, etc.\n",
        "operationId": "GetStatistics",
        "parameters": [
          {
            "description": "Your STACKIT Project ID",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "the start of the time range for which statistics should be returned",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "the end of the time range for which statistics should be returned. If not specified, \nthe end of the current time interval is used, e.g. next day for daily, \nnext month for monthly, and so on.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Over which interval should statistics be aggregated? \ndefaults to hourly resolution\n\n**NOTE**: Intervals are grouped in buckets that start and end based on a day in UTC+0 time.\nSo for the `daily` interval, the group starts (inclusive) and ends (exclusive) at `00:00Z`\n",
            "in": "query",
            "name": "interval",
            "schema": {
              "enum": [
                "hourly",
                "daily",
                "monthly",
                "yearly"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Request was successful, which is indicated by the Status code. No data is returned",
                    "value": {
                      "records": [
                        {
                          "cachedRequests": 1,
                          "end": "2024-09-26T10:00:00Z",
                          "regions": {
                            "AF": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "ASIA": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "EU": {
                              "cachedRequests": 1,
                              "totalRequests": 2,
                              "totalTrafficBytes": 100
                            },
                            "SA": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "US": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            }
                          },
                          "start": "2024-09-26T09:00:00Z",
                          "totalRequests": 2,
                          "totalTrafficBytes": 100
                        },
                        {
                          "cachedRequests": 10,
                          "end": "2024-09-26T11:00:00Z",
                          "regions": {
                            "AF": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "ASIA": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "EU": {
                              "cachedRequests": 10,
                              "totalRequests": 20,
                              "totalTrafficBytes": 1000
                            },
                            "SA": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "US": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            }
                          },
                          "start": "2024-09-26T10:00:00Z",
                          "totalRequests": 20,
                          "totalTrafficBytes": 1000
                        },
                        {
                          "cachedRequests": 20,
                          "end": "2024-09-26T14:00:00Z",
                          "regions": {
                            "AF": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "ASIA": {
                              "cachedRequests": 10,
                              "totalRequests": 20,
                              "totalTrafficBytes": 100
                            },
                            "EU": {
                              "cachedRequests": 10,
                              "totalRequests": 20,
                              "totalTrafficBytes": 100
                            },
                            "SA": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            },
                            "US": {
                              "cachedRequests": 0,
                              "totalRequests": 0,
                              "totalTrafficBytes": 0
                            }
                          },
                          "start": "2024-09-26T13:00:00Z",
                          "totalRequests": 40,
                          "totalTrafficBytes": 200
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "unauthorized - please make sure the \"Authorization\" header is set and uses correct credentials"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "unprocessable entity - please make sure the body you provided is constructed according to spec"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "internal error - please try again later or contact support if the issue persists"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericJSONResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retrieve the statistics of a distribution",
        "x-stackit-authorization": {
          "actions": [
            "cdn.distribution.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://cdn.api.stackit.cloud",
      "variables": {
        "region": {
          "default": "global"
        }
      }
    }
  ]
}