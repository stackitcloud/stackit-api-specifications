{
  "components": {
    "parameters": {
      "InstanceId": {
        "description": "Instance identifier.",
        "explode": false,
        "in": "path",
        "name": "instanceId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        },
        "style": "simple"
      },
      "ProjectId": {
        "description": "Project identifier.",
        "explode": false,
        "in": "path",
        "name": "projectId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        },
        "style": "simple"
      }
    },
    "schemas": {
      "CreateInstancePayload": {
        "description": "Instance creation configuration options.",
        "properties": {
          "acl": {
            "description": "Restricted ACL for instance access.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "type": "array"
          },
          "flavor": {
            "default": "git-100",
            "description": "Instance flavor. Defaults to git-100 if not specified.",
            "example": "git-100",
            "type": "string"
          },
          "name": {
            "description": "A user chosen name to distinguish multiple STACKIT Git instances.",
            "example": "my-instance",
            "maxLength": 32,
            "minLength": 5,
            "pattern": "^[a-z]([a-z0-9\\-]){0,30}[a-z0-9]+$",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Flavor": {
        "description": "Describes a STACKIT Git Flavor.",
        "properties": {
          "availability": {
            "description": "Defines the flavor availability.",
            "enum": [
              "available",
              "unavailable",
              "internal",
              "deprecated"
            ],
            "type": "string"
          },
          "description": {
            "description": "Flavor description.",
            "type": "string"
          },
          "display_name": {
            "description": "The display name that will be shown in the Portal.",
            "type": "string"
          },
          "id": {
            "description": "Flavor id.",
            "maxLength": 36,
            "type": "string"
          }
        },
        "required": [
          "id",
          "availability",
          "display_name",
          "description"
        ]
      },
      "GenericErrorResponse": {
        "description": "Generic Error Response.",
        "properties": {
          "details": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "message": {
            "example": "Internal server error.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "Instance": {
        "description": "Information about an Instance.",
        "properties": {
          "acl": {
            "description": "Restricted ACL for instance access.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "consumed_disk": {
            "description": "How many bytes of disk space is consumed. Read Only.",
            "type": "string"
          },
          "consumed_object_storage": {
            "description": "How many bytes of Object Storage is consumed. Read Only.",
            "type": "string"
          },
          "created": {
            "description": "Instance creation timestamp in RFC3339 format.",
            "example": "2025-04-07T07:08:12Z",
            "format": "date-time",
            "maxLength": 48,
            "type": "string"
          },
          "flavor": {
            "description": "Instance flavor.",
            "example": "git-100",
            "type": "string"
          },
          "id": {
            "description": "Instance identifier.",
            "example": "f88b5082-a81b-41ae-aae0-33df56907aa8",
            "format": "uuid",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "name": {
            "description": "Instance name.",
            "example": "my-instance",
            "maxLength": 32,
            "type": "string"
          },
          "state": {
            "description": "Indicate the readiness state of the instance.",
            "enum": [
              "Creating",
              "WaitingForResources",
              "Updating",
              "Deleting",
              "Ready",
              "Error"
            ],
            "maxLength": 32,
            "type": "string"
          },
          "url": {
            "description": "Instance url.",
            "example": "https://my-instance.git.onstackit.cloud",
            "maxLength": 512,
            "type": "string"
          },
          "version": {
            "description": "STACKIT Git version indicator.",
            "example": "v1.0.0",
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "flavor",
          "url",
          "created",
          "state",
          "version",
          "consumed_disk",
          "consumed_object_storage",
          "acl"
        ]
      },
      "InternalServerErrorResponse": {
        "description": "Internal server error.",
        "properties": {
          "error": {
            "example": "Internal server error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListFlavors": {
        "description": "A list of STACKIT Git flavors.",
        "properties": {
          "flavors": {
            "items": {
              "$ref": "#/components/schemas/Flavor"
            },
            "type": "array"
          }
        },
        "required": [
          "flavors"
        ]
      },
      "ListInstances": {
        "description": "List of Instances.",
        "properties": {
          "instances": {
            "items": {
              "$ref": "#/components/schemas/Instance"
            },
            "maxItems": 100,
            "type": "array"
          }
        },
        "required": [
          "instances"
        ]
      },
      "UUID": {
        "description": "Universally Unique Identifier (UUID).",
        "example": "d61a8564-c8dd-4ffb-bc15-143e7d0c85ed",
        "format": "uuid",
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "type": "string"
      },
      "UnauthorizedResponse": {
        "description": "The request could not be authorized.",
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "git@stackit.cloud",
      "name": "STACKIT Git",
      "url": "https://docs.stackit.cloud/stackit/en/git-261161358.html"
    },
    "description": "STACKIT Git management API.",
    "title": "STACKIT Git API",
    "version": "1beta.0.4"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1beta/projects/{projectId}/flavors": {
      "get": {
        "description": "Provides detailed information about possible Git Flavors.\n",
        "operationId": "ListFlavors",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFlavors"
                }
              }
            },
            "description": "Git flavors."
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "Unauthorized."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Returns the details for the given STACKIT Git flavors.",
        "x-stackit-authorization": {
          "actions": [
            "git.flavor.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "parameters": [
        {
          "description": "The STACKIT portal project UUID the STACKIT Git instance is part of.",
          "example": "83b8e9c4-e3d1-4dc4-bb89-9854c8b5383e",
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "format": "uuid",
            "maxLength": 36,
            "type": "string"
          }
        }
      ]
    },
    "/v1beta/projects/{projectId}/instances": {
      "get": {
        "description": "Lists all STACKIT Git instances within a project.\n",
        "operationId": "ListInstances",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstances"
                }
              }
            },
            "description": "Successful response with all instances."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "Unauthorized."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "List Instances.",
        "x-stackit-authorization": {
          "actions": [
            "git.instance.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ProjectId"
        }
      ],
      "post": {
        "description": "Creates a new STACKIT Git instance as a project resource.\n",
        "operationId": "CreateInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstancePayload"
              }
            }
          },
          "description": "Instance configuration options.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            },
            "description": "Instance has been created."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "Unauthorized."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Conflict."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Create an Instance.",
        "x-stackit-authorization": {
          "actions": [
            "git.instance.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1beta/projects/{projectId}/instances/{instanceId}": {
      "delete": {
        "description": "Deletes a STACKIT Git instance and destroys all associated data.\n",
        "operationId": "DeleteInstance",
        "responses": {
          "202": {
            "description": "Instance was deleted."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "Unauthorized."
          },
          "404": {
            "description": "Not found."
          },
          "409": {
            "description": "Conflict."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Delete Instance.",
        "x-stackit-authorization": {
          "actions": [
            "git.instance.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "get": {
        "description": "Retrieves information about a STACKIT Git instance.",
        "operationId": "GetInstance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "Unauthorized."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Get Instance information.",
        "x-stackit-authorization": {
          "actions": [
            "git.instance.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ProjectId"
        },
        {
          "$ref": "#/components/parameters/InstanceId"
        }
      ]
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://git.api.stackit.cloud",
      "variables": {
        "region": {
          "default": "global"
        }
      }
    }
  ]
}