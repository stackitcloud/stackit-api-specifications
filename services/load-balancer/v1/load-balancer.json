{
  "components": {
    "schemas": {
      "ActiveHealthCheck": {
        "properties": {
          "healthyThreshold": {
            "description": "Healthy threshold of the health checking",
            "title": "Healthy threshold",
            "type": "integer"
          },
          "interval": {
            "description": "Interval duration of health checking in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Interval",
            "type": "string"
          },
          "intervalJitter": {
            "description": "Interval duration threshold of the health checking in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Interval threshold",
            "type": "string"
          },
          "timeout": {
            "description": "Active health checking timeout duration in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Timeout",
            "type": "string"
          },
          "unhealthyThreshold": {
            "description": "Unhealthy threshold of the health checking",
            "title": "Unhealthy threshold",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateCredentialsPayload": {
        "properties": {
          "displayName": {
            "description": "Credential name",
            "example": "my-metrics-credential",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,251}[0-9a-z])?$",
            "type": "string"
          },
          "password": {
            "description": "A valid password used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "A valid username used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCredentialsResponse": {
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/CredentialsResponse"
          }
        },
        "type": "object"
      },
      "CreateLoadBalancerPayload": {
        "properties": {
          "errors": {
            "description": "Reports all errors a load balancer has.",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External load balancer IP address where this load balancer is exposed. Not changeable after creation.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "There is a maximum listener count of 20.\n\nPort and protocol limitations:\n\n- UDP listeners cannot have the same port.\n- TCP-derived listeners cannot have the same port. A TCP-derived listener is any listener that listens on a TCP port. As of now those are: TCP, TCP_PROXY, and PROTOCOL_TLS_PASSTHROUGH. The only exception is, if all listeners for the same port are PROTOCOL_TLS_PASSTHROUGH.\n- PROTOCOL_TLS_PASSTHROUGH listeners cannot have the same port and at least one common domain name.\n- PROTOCOL_TLS_PASSTHROUGH listeners can have the same domain name and different ports though (e.g. ports 443 and 8443 for domain example.com).\n- PROTOCOL_TLS_PASSTHROUGH listeners without a domain name serve as a default listener and you can have only one default listener.\n",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "title": "List of all listeners which will accept traffic.",
            "type": "array"
          },
          "name": {
            "description": "Load balancer name. Not changeable after creation.",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one. Not changeable after creation.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "privateAddress": {
            "description": "Transient private load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the load balancer. Limited to 20.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          },
          "version": {
            "description": "Load balancer resource version.\nMust be empty or unset for creating load balancers, non-empty for updating load balancers. Semantics:\nWhile retrieving load balancers, this is the current version of this load balancer resource that changes during updates of the load balancers. On updates this field specified the load balancer version you calculated your update for instead of the future version to enable concurrency safe updates. Update calls will then report the new version in their result as you would see with a load balancer retrieval call later. There exist no total order of the version, so you can only compare it for equality, but not for less/greater than another version. Since the creation of load balancer is always intended to create the first version of it, there should be no existing version. That's why this field must by empty of not present in that case.",
            "example": "lb-238165323",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CredentialsResponse": {
        "properties": {
          "credentialsRef": {
            "description": "The credentials reference can be used for observability of the Load Balancer.",
            "title": "Credentials reference",
            "type": "string"
          },
          "displayName": {
            "description": "Credential name",
            "example": "my-metrics-credential",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "username": {
            "description": "The username used for the ARGUS instance",
            "title": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteCredentialsResponse": {
        "type": "object"
      },
      "DeleteLoadBalancerResponse": {
        "description": "Response for deleting a load balancer has an empty body if successful.",
        "type": "object"
      },
      "DisableServiceResponse": {
        "description": "Response for disabling the load balancer has empty body if successful.",
        "type": "object"
      },
      "EnableServiceResponse": {
        "description": "Response for enabling the load balancer has empty body if successful.",
        "type": "object"
      },
      "GetCredentialsResponse": {
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/CredentialsResponse"
          }
        },
        "type": "object"
      },
      "GetQuotaResponse": {
        "properties": {
          "maxLoadBalancers": {
            "description": "The maximum number of load balancing servers in this project. Unlimited if set to -1.",
            "maximum": 999,
            "minimum": -1,
            "title": "Load Balancer quota",
            "type": "integer"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetServiceStatusResponse": {
        "description": "Response with customer project status.",
        "properties": {
          "status": {
            "description": "status of the project",
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_READY",
              "STATUS_FAILED",
              "STATUS_UPDATING",
              "STATUS_DELETING",
              "STATUS_DISABLED",
              "STATUS_PROJECT_UNKNOWN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCredentialsResponse": {
        "properties": {
          "credentials": {
            "items": {
              "$ref": "#/components/schemas/CredentialsResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListLoadBalancersResponse": {
        "properties": {
          "loadBalancers": {
            "items": {
              "$ref": "#/components/schemas/LoadBalancer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Listener": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "name": {
            "description": "Will be used to reference a listener and will replace display name in the future. Currently uses \u003cprotocol\u003e-\u003cport\u003e as the name if no display name is given.",
            "example": "my-listener",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "Port number where we listen for traffic",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "protocol": {
            "description": "Protocol is the highest network protocol we understand to load balance. Currently only PROTOCOL_TCP, PROTOCOL_TCP_PROXY and PROTOCOL_TLS_PASSTHROUGH are supported.",
            "enum": [
              "PROTOCOL_UNSPECIFIED",
              "PROTOCOL_TCP",
              "PROTOCOL_UDP",
              "PROTOCOL_TCP_PROXY",
              "PROTOCOL_TLS_PASSTHROUGH"
            ],
            "type": "string"
          },
          "serverNameIndicators": {
            "description": "Server Name Idicators config for domains to be routed to the desired target pool for this listener.",
            "items": {
              "$ref": "#/components/schemas/ServerNameIndicator"
            },
            "type": "array"
          },
          "targetPool": {
            "description": "Reference target pool by target pool name.",
            "example": "my-target-pool",
            "type": "string"
          },
          "tcp": {
            "$ref": "#/components/schemas/OptionsTCP"
          },
          "udp": {
            "$ref": "#/components/schemas/OptionsUDP"
          }
        },
        "type": "object"
      },
      "LoadBalancer": {
        "properties": {
          "errors": {
            "description": "Reports all errors a load balancer has.",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External load balancer IP address where this load balancer is exposed. Not changeable after creation.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "There is a maximum listener count of 20.\n\nPort and protocol limitations:\n\n- UDP listeners cannot have the same port.\n- TCP-derived listeners cannot have the same port. A TCP-derived listener is any listener that listens on a TCP port. As of now those are: TCP, TCP_PROXY, and PROTOCOL_TLS_PASSTHROUGH. The only exception is, if all listeners for the same port are PROTOCOL_TLS_PASSTHROUGH.\n- PROTOCOL_TLS_PASSTHROUGH listeners cannot have the same port and at least one common domain name.\n- PROTOCOL_TLS_PASSTHROUGH listeners can have the same domain name and different ports though (e.g. ports 443 and 8443 for domain example.com).\n- PROTOCOL_TLS_PASSTHROUGH listeners without a domain name serve as a default listener and you can have only one default listener.\n",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "title": "List of all listeners which will accept traffic.",
            "type": "array"
          },
          "name": {
            "description": "Load balancer name. Not changeable after creation.",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one. Not changeable after creation.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "privateAddress": {
            "description": "Transient private load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the load balancer. Limited to 20.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          },
          "version": {
            "description": "Load balancer resource version.\nMust be empty or unset for creating load balancers, non-empty for updating load balancers. Semantics:\nWhile retrieving load balancers, this is the current version of this load balancer resource that changes during updates of the load balancers. On updates this field specified the load balancer version you calculated your update for instead of the future version to enable concurrency safe updates. Update calls will then report the new version in their result as you would see with a load balancer retrieval call later. There exist no total order of the version, so you can only compare it for equality, but not for less/greater than another version. Since the creation of load balancer is always intended to create the first version of it, there should be no existing version. That's why this field must by empty of not present in that case.",
            "example": "lb-238165323",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerError": {
        "properties": {
          "description": {
            "description": "The error description contains additional helpful user information to fix the error state of the load balancer. For example the IP 45.135.247.139 does not exist in the project, then the description will report: Floating IP \"45.135.247.139\" could not be found.",
            "type": "string"
          },
          "type": {
            "description": "The error type specifies which part of the load balancer encountered the error. I.e. the API will not check if a provided public IP is actually available in the project. Instead the load balancer with try to use the provided IP and if not available reports TYPE_FIP_NOT_CONFIGURED error.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "TYPE_INTERNAL",
              "TYPE_QUOTA_SECGROUP_EXCEEDED",
              "TYPE_QUOTA_SECGROUPRULE_EXCEEDED",
              "TYPE_PORT_NOT_CONFIGURED",
              "TYPE_FIP_NOT_CONFIGURED",
              "TYPE_TARGET_NOT_ACTIVE",
              "TYPE_METRICS_MISCONFIGURED",
              "TYPE_LOGS_MISCONFIGURED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerOptions": {
        "description": "Defines any optional functionality you want to have enabled on your load balancer.",
        "properties": {
          "accessControl": {
            "$ref": "#/components/schemas/LoadbalancerOptionAccessControl"
          },
          "ephemeralAddress": {
            "type": "boolean"
          },
          "observability": {
            "$ref": "#/components/schemas/LoadbalancerOptionObservability"
          },
          "privateNetworkOnly": {
            "description": "Load Balancer is accessible only via a private network ip address. Not changeable after creation.",
            "title": "Private Network Only",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionAccessControl": {
        "description": "Use this option to limit the IP ranges that can use the load balancer.",
        "properties": {
          "allowedSourceRanges": {
            "description": "Load Balancer is accessible only from an IP address in this range",
            "items": {
              "type": "string"
            },
            "title": "Load Balancer source ranges",
            "type": "array"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionLogs": {
        "properties": {
          "credentialsRef": {
            "description": "Credentials reference for logging. This reference is created via the observability create endpoint and the credential needs to contain the basic auth username and password for the logging solution the push URL points to. Then this enables monitoring via remote write for the Load Balancer.",
            "title": "Credentials reference",
            "type": "string"
          },
          "pushUrl": {
            "description": "The ARGUS/Loki remote write Push URL you want the logs to be shipped to.",
            "example": "https://logs.stackit5.argus.eu01.stackit.cloud/instances/\u003cargus-instance-id\u003e/loki/api/v1/push",
            "title": "Push URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionMetrics": {
        "properties": {
          "credentialsRef": {
            "description": "Credentials reference for metrics. This reference is created via the observability create endpoint and the credential needs to contain the basic auth username and password for the metrics solution the push URL points to. Then this enables monitoring via remote write for the Load Balancer.",
            "title": "Credentials reference",
            "type": "string"
          },
          "pushUrl": {
            "description": "The ARGUS/Prometheus remote write Push URL you want the metrics to be shipped to.",
            "example": "https://push.metrics.stackit4.argus.eu01.stackit.cloud/instances/\u003cargus-instance-id\u003e/api/v1/receive",
            "title": "Push URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionObservability": {
        "description": "We offer Load Balancer metrics observability via ARGUS or external solutions. Not changeable after creation.",
        "properties": {
          "logs": {
            "$ref": "#/components/schemas/LoadbalancerOptionLogs"
          },
          "metrics": {
            "$ref": "#/components/schemas/LoadbalancerOptionMetrics"
          }
        },
        "type": "object"
      },
      "Network": {
        "properties": {
          "networkId": {
            "description": "Openstack network ID",
            "example": "2028e5d4-af4f-45e2-98df-502be37a4317",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          },
          "role": {
            "description": "The role defines how the load balancer is using the network. Currently only ROLE_LISTENERS_AND_TARGETS is supported.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "ROLE_LISTENERS_AND_TARGETS",
              "ROLE_LISTENERS",
              "ROLE_TARGETS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "OptionsTCP": {
        "properties": {
          "idleTimeout": {
            "description": "The connection idle timeout to be used with the protocol. The default value is set to 5 minutes, and the maximum value is one hour.",
            "example": "300s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Idle timeout",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OptionsUDP": {
        "properties": {
          "idleTimeout": {
            "description": "The connection idle timeout to be used with the protocol. The default value is set to 1 minute, and the maximum value is 2 minutes.",
            "example": "60s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Idle timeout",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerNameIndicator": {
        "properties": {
          "name": {
            "description": "The domain name for this SNI config.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SessionPersistence": {
        "properties": {
          "useSourceIpAddress": {
            "description": "If enabled then all connections from one source IP address are redirected to the same target. This setting changes the load balancing algorithm to Maglev.",
            "example": true,
            "title": "UseSourceIPAddress",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Target": {
        "properties": {
          "displayName": {
            "description": "Target name",
            "example": "my-target",
            "pattern": "^[0-9a-zA-Z](?:(?:[0-9a-zA-Z]|-){0,61}[0-9a-zA-Z])?$",
            "type": "string"
          },
          "ip": {
            "description": "Target IP. Must by unique within a target pool.",
            "example": "192.0.2.5",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetPool": {
        "properties": {
          "activeHealthCheck": {
            "$ref": "#/components/schemas/ActiveHealthCheck"
          },
          "name": {
            "description": "Target pool name",
            "example": "my-target-pool",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,18}[0-9a-z])?$",
            "type": "string"
          },
          "sessionPersistence": {
            "$ref": "#/components/schemas/SessionPersistence"
          },
          "targetPort": {
            "description": "The number identifying the port where each target listens for traffic.",
            "example": 5732,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "targets": {
            "description": "List of all targets which will be used in the pool. Limited to 250.",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateCredentialsPayload": {
        "properties": {
          "displayName": {
            "description": "Credential name",
            "example": "my-metrics-credential",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,251}[0-9a-z])?$",
            "type": "string"
          },
          "password": {
            "description": "A valid password used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "A valid username used for an existing ARGUS instance, which is used during basic auth.",
            "title": "Username",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCredentialsResponse": {
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/CredentialsResponse"
          }
        },
        "type": "object"
      },
      "UpdateLoadBalancerPayload": {
        "properties": {
          "errors": {
            "description": "Reports all errors a load balancer has.",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External load balancer IP address where this load balancer is exposed. Not changeable after creation.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "There is a maximum listener count of 20.\n\nPort and protocol limitations:\n\n- UDP listeners cannot have the same port.\n- TCP-derived listeners cannot have the same port. A TCP-derived listener is any listener that listens on a TCP port. As of now those are: TCP, TCP_PROXY, and PROTOCOL_TLS_PASSTHROUGH. The only exception is, if all listeners for the same port are PROTOCOL_TLS_PASSTHROUGH.\n- PROTOCOL_TLS_PASSTHROUGH listeners cannot have the same port and at least one common domain name.\n- PROTOCOL_TLS_PASSTHROUGH listeners can have the same domain name and different ports though (e.g. ports 443 and 8443 for domain example.com).\n- PROTOCOL_TLS_PASSTHROUGH listeners without a domain name serve as a default listener and you can have only one default listener.\n",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "title": "List of all listeners which will accept traffic.",
            "type": "array"
          },
          "name": {
            "description": "Load balancer name. Not changeable after creation.",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one. Not changeable after creation.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "privateAddress": {
            "description": "Transient private load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the load balancer. Limited to 20.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          },
          "version": {
            "description": "Load balancer resource version.\nMust be empty or unset for creating load balancers, non-empty for updating load balancers. Semantics:\nWhile retrieving load balancers, this is the current version of this load balancer resource that changes during updates of the load balancers. On updates this field specified the load balancer version you calculated your update for instead of the future version to enable concurrency safe updates. Update calls will then report the new version in their result as you would see with a load balancer retrieval call later. There exist no total order of the version, so you can only compare it for equality, but not for less/greater than another version. Since the creation of load balancer is always intended to create the first version of it, there should be no existing version. That's why this field must by empty of not present in that case.",
            "example": "lb-238165323",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateTargetPoolPayload": {
        "properties": {
          "activeHealthCheck": {
            "$ref": "#/components/schemas/ActiveHealthCheck"
          },
          "name": {
            "description": "Target pool name",
            "example": "my-target-pool",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,18}[0-9a-z])?$",
            "type": "string"
          },
          "sessionPersistence": {
            "$ref": "#/components/schemas/SessionPersistence"
          },
          "targetPort": {
            "description": "The number identifying the port where each target listens for traffic.",
            "example": 5732,
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "targets": {
            "description": "List of all targets which will be used in the pool. Limited to 250.",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "description": "This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.\n\nFor each load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.",
    "title": "Load Balancer API",
    "version": "1.6.5"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/projects/{projectId}": {
      "delete": {
        "deprecated": true,
        "description": "DEPRECATED! Disabling the load balancer functionality is now automatic. The endpoint is kept for compatibility.\n Disable will disable the load balancer functionality for the project specified.",
        "operationId": "DisableService",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisableServiceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this projectId is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Disables the functionality of load balancers for the project specified."
      },
      "get": {
        "deprecated": true,
        "description": "DEPRECATED! Projects are auto-enabled on SE side, meaning status is always enabled.\n Status will return the load balancer functionality status for the project specified.",
        "operationId": "GetServiceStatus",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServiceStatusResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Return the status of load balancer functionality for the project specified."
      },
      "post": {
        "deprecated": true,
        "description": "DEPRECATED! Use CreateLoadBalancer directly instead.\n Enable will enable the load balancer functionality for the project specified.",
        "operationId": "EnableService",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnableServiceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Enables the functionality of load balancers for the project specified."
      }
    },
    "/v1/projects/{projectId}/credentials": {
      "get": {
        "description": "List Credentials",
        "operationId": "ListCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "List all credentials in a project."
      },
      "post": {
        "description": "Create credentials can be used to store existing credentials, which are valid to be used for Load Balancer Observability.\n This means, e.g. when using ARGUS, that credentials first must be created for that ARGUS instance (by using their API) and\n then can be provided to the Load Balancer by storing them with this endpoint.",
        "operationId": "CreateCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Create credentials for observability of the Load Balancer"
      }
    },
    "/v1/projects/{projectId}/credentials/{credentialsRef}": {
      "delete": {
        "description": "Delete Credential",
        "operationId": "DeleteCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialsRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Delete a single credential in a project."
      },
      "get": {
        "description": "Get Credentials",
        "operationId": "GetCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialsRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "credential reference not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Get a single credential reference in a project."
      },
      "put": {
        "description": "Update Credentials",
        "operationId": "UpdateCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialsRef",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCredentialsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCredentialsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "credential reference not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Update credentials for observability in a project."
      }
    },
    "/v1/projects/{projectId}/load-balancers": {
      "get": {
        "description": "ListLoadBalancer will list load balancers of a project. This contains information set during\n creation or updates for every load balancer in the project. Additionally, it will have information about\n the state of the load balancer in the form of a status field and error description feedback.",
        "operationId": "ListLoadBalancers",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLoadBalancersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "List load balancers in a project."
      },
      "post": {
        "description": "Create Load Balancer will create a load balancer.\n The default load balancing algorithm is round robin unless useSourceIpAddress in session persistence is enabled for a target pool then it is Maglev.",
        "operationId": "CreateLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoadBalancerPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "load balancer already exists"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Create a load balancer in a project"
      }
    },
    "/v1/projects/{projectId}/load-balancers/{name}": {
      "delete": {
        "description": "DeleteLoadBalancer will delete a given load balancer.",
        "operationId": "DeleteLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLoadBalancerResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Delete a given load balancer in a project."
      },
      "get": {
        "description": "Get Load Balancer will get a single load balancer of a project. This contains all the information set during\n creation or updates. Additionally, it will have information about the state of the load balancer in the form\n of a status field and error description feedback.",
        "operationId": "GetLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "load balancer not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Get a single load balancer in a project."
      },
      "put": {
        "description": "Update Load Balancer allows the change of listeners and target pools of an existing Load Balancer.\n The Load balancer resource version needs to be the current version to ensure concurrency safe updates.\n The default load balancing algorithm is round robin unless useSourceIpAddress in session persistence is enabled for a target pool then it is Maglev.",
        "operationId": "UpdateLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLoadBalancerPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "Conflict with current state"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Update a load balancer in a project."
      }
    },
    "/v1/projects/{projectId}/load-balancers/{name}/target-pools/{targetPoolName}": {
      "put": {
        "description": "ReplaceTargetPool will replace a specific target pool of a load balancer with new content.\n Useful to  add/remove target servers. will update a load balancer.\n Only replaces the mentioned target pools and leaves others unchanged.\n Cannot be used to create or rename a target pool.",
        "operationId": "UpdateTargetPool",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "targetPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTargetPoolPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetPool"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Update a single target pool of a load balancer in a project."
      }
    },
    "/v1/projects/{projectId}/quota": {
      "get": {
        "description": "GetQuota gets the configured load balancer quota for the project. Default is 3.",
        "operationId": "GetQuota",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotaResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this projectId is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Get the quota of Load Balancers and Target Pools in a project."
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://load-balancer.api.{region}stackit.cloud",
      "variables": {
        "region": {
          "default": "eu01.",
          "enum": [
            "eu01."
          ]
        }
      }
    }
  ]
}