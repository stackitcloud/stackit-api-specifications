{
  "components": {
    "schemas": {
      "dev.azure.com_schwarzit_schwarzit.stackit-mongodb_stackit-mongodb-api.git_handlers_infra.Flavor": {
        "properties": {
          "categories": {
            "example": [
              "Replica"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cpu": {
            "example": 1,
            "type": "integer"
          },
          "description": {
            "example": "Small, Compute optimized",
            "type": "string"
          },
          "id": {
            "example": "1.1",
            "type": "string"
          },
          "memory": {
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "dev.azure.com_schwarzit_schwarzit.stackit-mongodb_stackit-mongodb-api.git_handlers_infra.GetFlavorsResponse": {
        "properties": {
          "flavors": {
            "items": {
              "$ref": "#/components/schemas/dev.azure.com_schwarzit_schwarzit.stackit-mongodb_stackit-mongodb-api.git_handlers_infra.Flavor"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "dev.azure.com_schwarzit_schwarzit.stackit-mongodb_stackit-mongodb-api.git_handlers_instances.GetInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.SingleInstance"
          }
        },
        "type": "object"
      },
      "handlers_infra.Flavor": {
        "properties": {
          "categories": {
            "example": [
              "Replica"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cpu": {
            "example": 1,
            "type": "integer"
          },
          "description": {
            "example": "Small, Compute optimized",
            "type": "string"
          },
          "id": {
            "example": "1.1",
            "type": "string"
          },
          "memory": {
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "instance.Acl": {
        "properties": {
          "items": {
            "example": [
              "0.0.0.0/0"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "instance.Backup": {
        "properties": {
          "endTime": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "size": {
            "type": "integer"
          },
          "startTime": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.CreateRestoreInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.Restore"
          }
        },
        "type": "object"
      },
      "instance.DataPoint": {
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "instance.Error": {
        "properties": {
          "code": {
            "example": 404,
            "type": "integer"
          },
          "fields": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "message": {
            "example": "database not found",
            "type": "string"
          },
          "type": {
            "example": "NotFound",
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.Flavor": {
        "properties": {
          "cpu": {
            "example": 1,
            "type": "integer"
          },
          "description": {
            "example": "Small, Compute optimized",
            "type": "string"
          },
          "id": {
            "example": "1.1",
            "type": "string"
          },
          "memory": {
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "instance.Host": {
        "properties": {
          "hostMetrics": {
            "items": {
              "$ref": "#/components/schemas/instance.HostMetric"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.HostMetric": {
        "properties": {
          "datapoints": {
            "items": {
              "$ref": "#/components/schemas/instance.DataPoint"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "units": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.ListInstance": {
        "properties": {
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.ListUser": {
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.ResponseUser": {
        "properties": {
          "database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.Restore": {
        "properties": {
          "backupID": {
            "example": "1",
            "type": "string"
          },
          "date": {
            "example": "2009-11-10 23:00:00 +0000 UTC m=+0.000000001",
            "type": "string"
          },
          "id": {
            "example": "1",
            "type": "string"
          },
          "instanceId": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.SingleInstance": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/instance.Acl"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavor": {
            "$ref": "#/components/schemas/instance.Flavor"
          },
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          },
          "storage": {
            "$ref": "#/components/schemas/instance.Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.Storage": {
        "properties": {
          "class": {
            "type": "string"
          },
          "size": {
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "instance.StorageRange": {
        "properties": {
          "max": {
            "example": 1000,
            "type": "integer"
          },
          "min": {
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "instance.User": {
        "properties": {
          "database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestoreInstancePayload": {
        "properties": {
          "backupId": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateUserPayload": {
        "properties": {
          "database": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateBackupSchedulePayload": {
        "properties": {
          "backupSchedule": {
            "type": "string"
          },
          "dailySnapshotRetentionDays": {
            "type": "integer"
          },
          "monthlySnapshotRetentionMonths": {
            "type": "integer"
          },
          "pointInTimeWindowHours": {
            "type": "integer"
          },
          "snapshotRetentionDays": {
            "type": "integer"
          },
          "weeklySnapshotRetentionWeeks": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateInstanceClonePayload": {
        "properties": {
          "instanceId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUserPayload": {
        "properties": {
          "database": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateInstancePayload": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/instance.Acl"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "example": "1.1",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Following fields are not certain/clear",
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/instance.Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateInstancePayload": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/instance.Acl"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "example": "1.1",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Following fields are not certain/clear",
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/instance.Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "required": [
          "acl"
        ],
        "type": "object"
      },
      "GetUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.ResponseUser"
          }
        },
        "type": "object"
      },
      "MetricsResponse": {
        "properties": {
          "hosts": {
            "items": {
              "$ref": "#/components/schemas/instance.Host"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetInstancesResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.ListInstance"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VersionsResponse": {
        "properties": {
          "versions": {
            "example": [
              "1.0"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateInstanceResponse": {
        "properties": {
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.User"
          }
        },
        "type": "object"
      },
      "GetBackupResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.Backup"
          }
        },
        "type": "object"
      },
      "GetInstanceRestoresResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.Restore"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetUsersResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.ListUser"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetStorageResponse": {
        "properties": {
          "storageClasses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "storageRange": {
            "$ref": "#/components/schemas/instance.StorageRange"
          }
        },
        "type": "object"
      },
      "CreateInstanceCloneResponse": {
        "properties": {
          "instanceId": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.SingleInstance"
          }
        },
        "type": "object"
      },
      "GetBackupsResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.Backup"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.SingleInstance"
          }
        },
        "type": "object"
      },
      "GetFlavorsResponse": {
        "properties": {
          "flavors": {
            "items": {
              "$ref": "#/components/schemas/handlers_infra.Flavor"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@stackit.cloud",
      "name": "STACKIT MongoDB Service Support",
      "url": "https://www.stackit.de/en/contact"
    },
    "description": "This is the documentation for the STACKIT MongoDB Flex Service API",
    "termsOfService": "https://www.stackit.de/en/general-terms-and-conditions/",
    "title": "STACKIT MongoDB Service API",
    "version": "1.0.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/projects/{projectId}": {
      "delete": {
        "description": "removes all instances inside project",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete project",
        "operationId": "DeleteProject"
      }
    },
    "/v1/projects/{projectId}/flavors": {
      "get": {
        "description": "returns all possible flavors",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlavorsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Flavors",
        "operationId": "GetFlavors"
      }
    },
    "/v1/projects/{projectId}/instances": {
      "get": {
        "description": "list all instances for a projectID",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance tag",
            "explode": true,
            "in": "query",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstancesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Instances",
        "operationId": "GetInstances"
      },
      "post": {
        "description": "Create and deploys an instance\u003cbr/\u003e Note that the time format for the backupSchedule is in UTC",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstancePayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInstanceResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create instance",
        "operationId": "CreateInstance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}": {
      "delete": {
        "description": "removes an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete instance",
        "operationId": "DeleteInstance"
      },
      "get": {
        "description": "gets information of an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get instance",
        "operationId": "GetInstance"
      },
      "put": {
        "description": "Updates a deployment plan\u003cbr/\u003e Note that the time format for the backupSchedule is in UTC",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInstancePayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInstanceResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Put endpoint",
        "operationId": "UpdateInstance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups": {
      "get": {
        "description": "List backups of an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackupsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List backup",
        "operationId": "GetBackups"
      },
      "put": {
        "description": "Updates a backup schedule\u003cbr/\u003e Note that the time format is in UTC",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBackupSchedulePayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBackupSchedulePayload"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update schedule",
        "operationId": "UpdateBackupSchedule"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups/{backupId}": {
      "get": {
        "description": "Get details about a specific backup",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "backup id",
            "explode": false,
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackupResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get backup",
        "operationId": "GetBackup"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/clone": {
      "post": {
        "description": "Clone an instance via PIT restore\u003cbr/\u003e Note that the Timestamp is a RFC3339 standard and uses by default UTC time format\u003cbr/\u003e\nAs an example a valid timestamp look like \"2023-04-20T15:05:15Z\"",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceClonePayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInstanceCloneResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Clone instance",
        "operationId": "CreateInstanceClone"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/cpu": {
      "get": {
        "description": "returns CPU metrics for an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "granularity",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period start",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period end",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "CPU Metrics",
        "operationId": "GetCPUMetrics"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/database": {
      "get": {
        "description": "returns databse storage metrics for an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "granularity",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period start",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period end",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Database Storage Metrics",
        "operationId": "GetDatabaseStorageMetrics"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/disk-iops": {
      "get": {
        "description": "returns disk IOPS metrics for an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "granularity",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period start",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period end",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Disk IOPS CPU Metrics",
        "operationId": "GetDiskIOPSMetrics"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/disk-use": {
      "get": {
        "description": "returns disk usage metrics for an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "granularity",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period start",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period end",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Disk Usage Metrics",
        "operationId": "GetDiskUsageMetrics"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/exec-time": {
      "get": {
        "description": "returns Operation Execution Times metrics for an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "granularity",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period start",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period end",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Operation Execution Time Metrics",
        "operationId": "GetExecutionTimesMetrics"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/memory": {
      "get": {
        "description": "returns memory metrics for an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": true,
            "in": "query",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "granularity",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period start",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "period end",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Memory Metrics",
        "operationId": "GetMemoryMetrics"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/restores": {
      "get": {
        "description": "List restore jobs of an instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstanceRestoresResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List restore jobs",
        "operationId": "GetInstanceRestores"
      },
      "post": {
        "description": "Restore an instance based on snapshot",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreInstancePayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.CreateRestoreInstanceResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Restore instance",
        "operationId": "RestoreInstance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users": {
      "get": {
        "description": "list all users for a mongodb instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Users",
        "operationId": "GetUsers"
      },
      "post": {
        "description": "create a new user for a mongodb instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserPayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create User",
        "operationId": "CreateUser"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}": {
      "delete": {
        "description": "delete mongodb user",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "user id",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete User",
        "operationId": "DeleteUser"
      },
      "get": {
        "description": "get detailed information of a user of a mongodb instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "user id",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get User",
        "operationId": "GetUser"
      },
      "put": {
        "description": "updates user for a mongodb instance",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "user id",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPayload"
              }
            }
          },
          "description": "payload",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update User",
        "operationId": "UpdateUser"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}/reset": {
      "post": {
        "description": "resets mongodb user's password",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "instance id",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "user id",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.User"
                }
              }
            },
            "description": "Accepted"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reset User",
        "operationId": "ResetUser"
      }
    },
    "/v1/projects/{projectId}/storages/{flavor}": {
      "get": {
        "description": "returns the storage for a certain flavor",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "flavor id",
            "explode": false,
            "in": "path",
            "name": "flavor",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStorageResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get storage",
        "operationId": "GetStorage"
      }
    },
    "/v1/projects/{projectId}/versions": {
      "get": {
        "description": "returns all available versions for creating endpoint",
        "parameters": [
          {
            "description": "project id",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get versions",
        "operationId": "GetVersions"
      }
    }
  },
  "servers": [
    {
      "description": "prd stage",
      "url": "https://mongodb-flex-service.api.{region}stackit.cloud",
      "variables": {
        "region": {
          "default": "eu01.",
          "enum": [
            "eu01."
          ]
        }
      }
    }
  ]
}