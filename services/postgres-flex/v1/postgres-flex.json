{
  "components": {
    "schemas": {
      "ACL": {
        "properties": {
          "items": {
            "example": [
              "0.0.0.0/0"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Backup": {
        "properties": {
          "endTime": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "size": {
            "type": "integer"
          },
          "startTime": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloneInstancePayload": {
        "properties": {
          "class": {
            "example": "premium-perf6-stackit",
            "type": "string"
          },
          "size": {
            "example": 10,
            "type": "integer"
          },
          "timestamp": {
            "description": "The timestamp should be specified in UTC time following the format provided in the example.",
            "example": "2023-04-17T09:28:00+00:00",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloneInstanceResponse": {
        "properties": {
          "instanceId": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateInstancePayload": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "example": "1.1",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels field is not certain/clear",
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "required": [
          "acl",
          "backupSchedule",
          "flavorId",
          "name",
          "options",
          "replicas",
          "storage",
          "version"
        ],
        "type": "object"
      },
      "CreateInstanceResponse": {
        "properties": {
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUserPayload": {
        "properties": {
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "Error": {
        "properties": {
          "code": {
            "example": 404,
            "type": "integer"
          },
          "fields": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "message": {
            "example": "database not found",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Flavor": {
        "properties": {
          "cpu": {
            "example": 1,
            "type": "integer"
          },
          "description": {
            "example": "Small, Compute optimized",
            "type": "string"
          },
          "id": {
            "example": "1.1",
            "type": "string"
          },
          "memory": {
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetBackupResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Backup"
          }
        },
        "type": "object"
      },
      "GetUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        "type": "object"
      },
      "Instance": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavor": {
            "$ref": "#/components/schemas/Flavor"
          },
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          },
          "storage": {
            "$ref": "#/components/schemas/Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "ListBackupsResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Backup"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListFlavorsResponse": {
        "properties": {
          "flavors": {
            "items": {
              "$ref": "#/components/schemas/Flavor"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListInstancesResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.ListInstance"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListStoragesResponse": {
        "properties": {
          "storageClasses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "storageRange": {
            "$ref": "#/components/schemas/StorageRange"
          }
        },
        "type": "object"
      },
      "ListUsersResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ListUsersResponseItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListUsersResponseItem": {
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListVersionsResponse": {
        "properties": {
          "versions": {
            "example": [
              "1.0"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PartialUpdateInstancePayload": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "example": "1.1",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels field is not certain/clear",
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PartialUpdateInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "PartialUpdateUserPayload": {
        "properties": {
          "database": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResetUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "Storage": {
        "properties": {
          "class": {
            "type": "string"
          },
          "size": {
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StorageRange": {
        "properties": {
          "max": {
            "example": 1000,
            "type": "integer"
          },
          "min": {
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateBackupSchedulePayload": {
        "properties": {
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          }
        },
        "required": [
          "backupSchedule"
        ],
        "type": "object"
      },
      "UpdateUserPayload": {
        "properties": {
          "database": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserResponse": {
        "properties": {
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.ListInstance": {
        "properties": {
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@stackit.cloud",
      "name": "STACKIT Postgres Service Support",
      "url": "https://www.stackit.de/en/contact"
    },
    "description": "This is the documentation for the STACKIT postgres service",
    "termsOfService": "https://www.stackit.de/en/general-terms-and-conditions/",
    "title": "STACKIT PostgreSQL Flex API",
    "version": "1.0.0",
    "x-stackit-timeout": "15m"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/projects/{projectId}/flavors": {
      "get": {
        "description": "Get available flavors for a specific projectID",
        "operationId": "ListFlavors",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFlavorsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Flavors"
      }
    },
    "/v1/projects/{projectId}/instances": {
      "get": {
        "description": "List available instances",
        "operationId": "ListInstances",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstancesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Instances"
      },
      "post": {
        "description": "Create a new instance of a postgres database",
        "operationId": "CreateInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstancePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInstanceResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create Instance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}": {
      "delete": {
        "description": "Delete available instance",
        "operationId": "DeleteInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Instance"
      },
      "get": {
        "description": "Get specific available instances",
        "operationId": "GetInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get specific instance"
      },
      "patch": {
        "description": "Update available instance of a postgres database. Supported Versions are 12, 13, 14, 15 -- only upgrades are allowed!",
        "operationId": "PartialUpdateInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialUpdateInstancePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartialUpdateInstanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Instance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups": {
      "get": {
        "description": "List all backups which are available for a specific instance",
        "operationId": "ListBackups",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBackupsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List backups"
      },
      "put": {
        "description": "Update backup schedule",
        "operationId": "UpdateBackupSchedule",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBackupSchedulePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Backup Schedule"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups/{backupId}": {
      "get": {
        "description": "Get specific available backup",
        "operationId": "GetBackup",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Backup ID",
            "explode": false,
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackupResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get specific backup"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/clone": {
      "post": {
        "description": "Clone an existing instance of a postgres database to a new destination instance",
        "operationId": "CloneInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneInstancePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloneInstanceResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Clone Instance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/force": {
      "delete": {
        "description": "Forces the deletion of an delayed deleted instance",
        "operationId": "ForceDeleteInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Acceptable"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Force delete instance"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users": {
      "get": {
        "description": "List available users for an instance",
        "operationId": "ListUsers",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Users"
      },
      "post": {
        "description": "Create user for an instance",
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserPayload"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create User"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}": {
      "delete": {
        "description": "Delete user for an instance",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "User ID",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete User"
      },
      "get": {
        "description": "Get specific available user for an instance",
        "operationId": "GetUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "User ID",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get User"
      },
      "patch": {
        "description": "Update user for an instance. Only the roles are updatable.",
        "operationId": "PartialUpdateUser",
        "parameters": [
          {
            "description": "The ID of the project",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The ID of the instance",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The ID of the user in the database",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialUpdateUserPayload"
              }
            }
          },
          "description": "The Request body only required in PUT endpoint. If empty request body is send via patch, then login and createdb roles are removed from user. The field "
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update User"
      },
      "put": {
        "description": "Update user for an instance. Only the roles are updatable.",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "description": "The ID of the project",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The ID of the instance",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The ID of the user in the database",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPayload"
              }
            }
          },
          "description": "The Request body only required in PUT endpoint. If empty request body is send via patch, then login and createdb roles are removed from user. The field "
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update User"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}/reset": {
      "post": {
        "description": "Reset user password for a postgres instance",
        "operationId": "ResetUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "user ID",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetUserResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reset User"
      }
    },
    "/v1/projects/{projectId}/storages/{flavorId}": {
      "get": {
        "description": "Get available storages for a specific flavor",
        "operationId": "ListStorages",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Flavor ID",
            "explode": false,
            "in": "path",
            "name": "flavorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStoragesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Storages"
      }
    },
    "/v1/projects/{projectId}/versions": {
      "get": {
        "description": "Get available versions for postgres database",
        "operationId": "ListVersions",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": true,
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVersionsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Versions"
      }
    }
  },
  "servers": [
    {
      "url": "https://postgres-flex-service.api.{region}stackit.cloud",
      "variables": {
        "region": {
          "default": "eu01.",
          "enum": [
            "eu01."
          ]
        }
      }
    }
  ]
}