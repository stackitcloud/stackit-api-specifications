{
  "components": {
    "schemas": {
      "ACL": {
        "properties": {
          "items": {
            "example": [
              "193.148.160.0/19",
              "45.129.40.0/21"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Backup": {
        "properties": {
          "endTime": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "size": {
            "type": "integer"
          },
          "startTime": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDatabasePayload": {
        "properties": {
          "name": {
            "example": "Test",
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/database.DocumentationCreateDatabaseRequestOptions"
          }
        },
        "required": [
          "name",
          "options"
        ],
        "type": "object"
      },
      "CreateDatabaseResponse": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateInstancePayload": {
        "properties": {
          "acl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationACL"
              }
            ],
            "description": "ACL is the Access Control List defining the IP ranges allowed to connect to the database",
            "type": "object"
          },
          "backupSchedule": {
            "description": "Cronjob for the daily full backup if not provided a job will generated between 00:00 and 04:59",
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "description": "Id of the selected flavor",
            "example": "4.16-Single",
            "type": "string"
          },
          "labels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationLabels"
              }
            ],
            "description": "Labels for the instance",
            "type": "object"
          },
          "name": {
            "description": "Name of the instance",
            "example": "test-instance",
            "type": "string"
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationOptions"
              }
            ],
            "description": "Database instance specific options are requested via this field",
            "type": "object"
          },
          "storage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationStorage"
              }
            ],
            "description": "Storage for the instance",
            "type": "object"
          },
          "version": {
            "default": "2022",
            "description": "Version of the MSSQL Server",
            "example": "2022",
            "type": "string"
          }
        },
        "required": [
          "flavorId",
          "name"
        ],
        "type": "object"
      },
      "CreateInstanceResponse": {
        "properties": {
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUserPayload": {
        "properties": {
          "default_database": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "roles"
        ],
        "type": "object"
      },
      "CreateUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SingleUser"
          }
        },
        "type": "object"
      },
      "DataPoint": {
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Database": {
        "properties": {
          "id": {
            "example": "1",
            "type": "string"
          },
          "name": {
            "example": "Peter_pan",
            "type": "string"
          },
          "options": {
            "description": "Database specific options",
            "type": "object"
          }
        },
        "type": "object"
      },
      "DatabaseOptions": {
        "properties": {
          "collationName": {
            "description": "Name of the collation of the database",
            "example": "SQL_Latin1_General_CP1_CI_AS",
            "type": "string"
          },
          "compatibilityLevel": {
            "description": "CompatibilityLevel of the Database.",
            "example": 160,
            "type": "integer"
          },
          "owner": {
            "description": "Name of the owner of the database.",
            "example": "Peter",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Flavor": {
        "properties": {
          "cpu": {
            "example": 1,
            "type": "integer"
          },
          "description": {
            "example": "Small, Compute optimized",
            "type": "string"
          },
          "id": {
            "example": "1.1",
            "type": "string"
          },
          "memory": {
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetBackupResponse": {
        "properties": {
          "endTime": {
            "description": "Backup end time in UTC",
            "type": "string"
          },
          "error": {
            "description": "Backup error",
            "type": "string"
          },
          "id": {
            "description": "Backup id",
            "type": "string"
          },
          "labels": {
            "description": "Backup labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Backup name",
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Backup specific options",
            "type": "object"
          },
          "size": {
            "description": "Backup size in byte",
            "type": "integer"
          },
          "startTime": {
            "description": "Backup start time in UTC",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDatabaseResponse": {
        "properties": {
          "database": {
            "$ref": "#/components/schemas/SingleDatabase"
          }
        },
        "type": "object"
      },
      "GetInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "GetUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/user.ResponseUser"
          }
        },
        "type": "object"
      },
      "Host": {
        "properties": {
          "hostMetrics": {
            "items": {
              "$ref": "#/components/schemas/HostMetric"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostMetric": {
        "properties": {
          "datapoints": {
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "units": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Instance": {
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL"
          },
          "backupSchedule": {
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavor": {
            "$ref": "#/components/schemas/Flavor"
          },
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "replicas": {
            "example": 3,
            "type": "integer"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          },
          "storage": {
            "$ref": "#/components/schemas/Storage"
          },
          "version": {
            "example": "1.0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListBackupsResponse": {
        "properties": {
          "databases": {
            "items": {
              "$ref": "#/components/schemas/backup.ListBackupsResponse.Grouped"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListCollationsResponse": {
        "properties": {
          "collations": {
            "items": {
              "$ref": "#/components/schemas/mssql.DatabaseCollation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListCompatibilityResponse": {
        "properties": {
          "compatibilities": {
            "items": {
              "$ref": "#/components/schemas/mssql.DatabaseCompatibility"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListDatabasesResponse": {
        "properties": {
          "databases": {
            "items": {
              "$ref": "#/components/schemas/Database"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListFlavorsResponse": {
        "properties": {
          "flavors": {
            "items": {
              "$ref": "#/components/schemas/instance.FlavorEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListInstancesResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.ListInstance"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListMetricsResponse": {
        "properties": {
          "hosts": {
            "items": {
              "$ref": "#/components/schemas/Host"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListRestoreJobsResponse": {
        "properties": {
          "runningRestores": {
            "items": {
              "$ref": "#/components/schemas/restore.RunningRestore"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListRolesResponse": {
        "properties": {
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListStoragesResponse": {
        "properties": {
          "storageClasses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "storageRange": {
            "$ref": "#/components/schemas/StorageRange"
          }
        },
        "type": "object"
      },
      "ListUsersResponse": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/instance.ListUser"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListVersionsResponse": {
        "properties": {
          "versions": {
            "example": [
              "1.0"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PartialUpdateInstancePayload": {
        "properties": {
          "acl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationACL"
              }
            ],
            "description": "ACL is the Access Control List defining the IP ranges allowed to connect to the database",
            "type": "object"
          },
          "backupSchedule": {
            "description": "Cronjob for the daily full backup if not provided a job will generated between 00:00 and 04:59",
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "description": "Id of the selected flavor",
            "example": "4.16-Single",
            "type": "string"
          },
          "labels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationLabels"
              }
            ],
            "description": "Labels for the instance",
            "type": "object"
          },
          "name": {
            "description": "Name of the instance",
            "example": "test-instance",
            "type": "string"
          },
          "version": {
            "default": "2022",
            "description": "Version of the MSSQL Server",
            "example": "2022",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResetUserResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SingleUser"
          }
        },
        "type": "object"
      },
      "SingleDatabase": {
        "properties": {
          "id": {
            "description": "Database id",
            "example": "1",
            "type": "string"
          },
          "name": {
            "description": "Database name",
            "example": "Peter_pan",
            "type": "string"
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DatabaseOptions"
              }
            ],
            "description": "Database specific options",
            "type": "object"
          }
        },
        "type": "object"
      },
      "SingleUser": {
        "properties": {
          "default_database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Storage": {
        "properties": {
          "class": {
            "type": "string"
          },
          "size": {
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StorageRange": {
        "properties": {
          "max": {
            "example": 1000,
            "type": "integer"
          },
          "min": {
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TriggerDatabaseRestorePayload": {
        "properties": {
          "name": {
            "description": "Name for the restored database no overwrite allowed at the moment",
            "example": "Peter_pan",
            "type": "string"
          },
          "restoreDateTime": {
            "description": "Time of the restore point formate RFC3339",
            "example": "2023-08-23T08:25:23+02:00",
            "type": "string"
          }
        },
        "required": [
          "name",
          "restoreDateTime"
        ],
        "type": "object"
      },
      "Type": {
        "enum": [
          "NotFound",
          "Create",
          "Read",
          "Delete",
          "Update",
          "Validation"
        ],
        "type": "string"
      },
      "UpdateInstancePayload": {
        "properties": {
          "acl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationACL"
              }
            ],
            "description": "ACL is the Access Control List defining the IP ranges allowed to connect to the database",
            "type": "object"
          },
          "backupSchedule": {
            "description": "Cronjob for the daily full backup if not provided a job will generated between 00:00 and 04:59",
            "example": "6 6 * * *",
            "type": "string"
          },
          "flavorId": {
            "description": "Id of the selected flavor",
            "example": "4.16-Single",
            "type": "string"
          },
          "labels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/instance.DocumentationLabels"
              }
            ],
            "description": "Labels for the instance",
            "type": "object"
          },
          "name": {
            "description": "Name of the instance",
            "example": "test-instance",
            "type": "string"
          },
          "version": {
            "default": "2022",
            "description": "Version of the MSSQL Server",
            "example": "2022",
            "type": "string"
          }
        },
        "required": [
          "acl",
          "backupSchedule",
          "flavorId",
          "labels",
          "name",
          "version"
        ],
        "type": "object"
      },
      "UpdateInstanceResponse": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "backup.ListBackupsResponse.Grouped": {
        "properties": {
          "backups": {
            "items": {
              "$ref": "#/components/schemas/Backup"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "database.DocumentationCreateDatabaseRequestOptions": {
        "properties": {
          "collation": {
            "description": "Collation of the database",
            "example": "Latin1_General_100_CI_AS_KS_WS",
            "type": "string"
          },
          "compatibilityLevel": {
            "description": "CompatibilityLevel of the Database.",
            "example": "160",
            "type": "string"
          },
          "owner": {
            "description": "Name of the owner of the database.",
            "example": "Herbert",
            "type": "string"
          }
        },
        "required": [
          "owner"
        ],
        "type": "object"
      },
      "instance.DocumentationACL": {
        "properties": {
          "items": {
            "description": "a simple list with IP addresses with CIDR.",
            "example": [
              "193.148.160.0/19",
              "45.129.40.0/21"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "instance.DocumentationLabels": {
        "type": "object"
      },
      "instance.DocumentationOptions": {
        "properties": {
          "edition": {
            "default": "developer",
            "description": "Edition of the MSSQL server instance",
            "example": "developer",
            "type": "string"
          },
          "retentionDays": {
            "default": "32",
            "description": "The days for how long the backup files should be stored before cleaned up. 30 to 365",
            "example": "64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.DocumentationStorage": {
        "properties": {
          "class": {
            "default": "premium-perf12-stackit",
            "description": "Class of the instance.",
            "example": "premium-perf6-stackit",
            "type": "string"
          },
          "size": {
            "description": "Size of the instance storage in GB",
            "example": 10,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "instance.Error": {
        "properties": {
          "code": {
            "example": 404,
            "type": "integer"
          },
          "fields": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "message": {
            "example": "database not found",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "type": "object"
      },
      "instance.FlavorEntry": {
        "properties": {
          "categories": {
            "example": "General Purpose",
            "type": "string"
          },
          "cpu": {
            "example": 1,
            "type": "integer"
          },
          "description": {
            "example": "Small, Compute optimized",
            "type": "string"
          },
          "id": {
            "example": "1.1",
            "type": "string"
          },
          "memory": {
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "instance.ListInstance": {
        "properties": {
          "id": {
            "example": "df727477-8991-486c-a3ed-d11d9d9beb1c",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "example": "RUNNING",
            "type": "string"
          }
        },
        "type": "object"
      },
      "instance.ListUser": {
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "mssql.DatabaseCollation": {
        "properties": {
          "collation_name": {
            "example": "Albanian_BIN",
            "type": "string"
          },
          "description": {
            "example": "Albanian, binary sort",
            "type": "string"
          }
        },
        "type": "object"
      },
      "mssql.DatabaseCompatibility": {
        "properties": {
          "compatibility_level": {
            "example": 110,
            "type": "integer"
          },
          "description": {
            "example": "SQL Server 2011",
            "type": "string"
          }
        },
        "type": "object"
      },
      "restore.RunningRestore": {
        "properties": {
          "command": {
            "example": "RESTORE DATABASE",
            "type": "string"
          },
          "database_name": {
            "example": "test_db",
            "type": "string"
          },
          "estimated_completion_time": {
            "example": "2023-09-25T12:17:30",
            "type": "string"
          },
          "percent_complete": {
            "example": 20,
            "type": "integer"
          },
          "start_time": {
            "example": "2023-09-25T12:14:48",
            "type": "string"
          }
        },
        "type": "object"
      },
      "user.ResponseUser": {
        "properties": {
          "default_database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@stackit.cloud",
      "name": "STACKIT MSSQL Service Support",
      "url": "https://www.stackit.de/en/contact"
    },
    "description": "This is the documentation for the STACKIT MSSQL service",
    "termsOfService": "https://www.stackit.de/en/general-terms-and-conditions/",
    "title": "STACKIT MSSQL Service API",
    "version": "1.0.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/projects/{projectId}/flavors": {
      "get": {
        "description": "Get available flavors for a specific projectID",
        "operationId": "ListFlavors",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFlavorsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Flavors",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.flavor.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances": {
      "get": {
        "description": "List available instances",
        "operationId": "ListInstances",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstancesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Instances",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.instance.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "post": {
        "description": "Create a new instance of a sqlServerCRD database",
        "operationId": "CreateInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstancePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInstanceResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create Instance",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.instance.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}": {
      "delete": {
        "description": "Delete available instance",
        "operationId": "DeleteInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Instance",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.instance.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "get": {
        "description": "Get specific available instances",
        "operationId": "GetInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get specific instance",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.instance.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "patch": {
        "description": "Update available instance of a mssql database.\n\n**Please note that any changes applied via PUT or PATCH requests will initiate a reboot of the SQL Server Flex Instance.**\n",
        "operationId": "PartialUpdateInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialUpdateInstancePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInstanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Instance",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.instance.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "put": {
        "description": "Update available instance of a mssql database.\n\n**Please note that any changes applied via PUT or PATCH requests will initiate a reboot of the SQL Server Flex Instance.**\n",
        "operationId": "UpdateInstance",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInstancePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInstanceResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Instance",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.instance.update"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups": {
      "get": {
        "description": "List all backups which are available for a specific instance",
        "operationId": "ListBackups",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBackupsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List backups",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.backup.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups/databases/{databaseName}": {
      "post": {
        "description": "Trigger backup for a specific Database",
        "operationId": "TriggerDatabaseBackup",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Database Name",
            "explode": false,
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Trigger backup for a specific Database",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.backup.trigger"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups/databases/{databaseName}/restores": {
      "post": {
        "description": "Trigger restore for a specific Database",
        "operationId": "TriggerDatabaseRestore",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Database Name",
            "explode": false,
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerDatabaseRestorePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Trigger restore for a specific Database",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.restore.trigger"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups/{backupId}": {
      "get": {
        "description": "Get specific available backup",
        "operationId": "GetBackup",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Backup ID",
            "explode": false,
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackupResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get specific backup",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.backup.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/collation": {
      "get": {
        "description": "Returns a list of collations",
        "operationId": "ListCollations",
        "parameters": [
          {
            "description": "The ID of the STACKIT project",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The ID of the instance",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollationsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get database collation list",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.collation.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/compatibility": {
      "get": {
        "description": "Returns a list of compatibility levels for creating a new database",
        "operationId": "ListCompatibility",
        "parameters": [
          {
            "description": "The ID of the STACKIT project",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The ID of the instance",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompatibilityResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get database compatibility list",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.compatlevel.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/databases": {
      "get": {
        "description": "Get list of all databases in the instance",
        "operationId": "ListDatabases",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatabasesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get list of databases",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.database.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "post": {
        "description": "Create a Database for an instance",
        "operationId": "CreateDatabase",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDatabasePayload"
              }
            }
          },
          "description": "Body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDatabaseResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create a Database",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.database.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/databases/{databaseName}": {
      "delete": {
        "description": "Delete Database for an instance",
        "operationId": "DeleteDatabase",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Database Name",
            "explode": false,
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Database",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.database.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "get": {
        "description": "Get specific available database",
        "operationId": "GetDatabase",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Database Name",
            "explode": false,
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatabaseResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get specific Database",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.database.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/metrics/{metric}": {
      "get": {
        "description": "Returns a metric for an instance. The metric will only be for the master pod if needed. Granularity parameter is always needed. If start and end time is provided, period is not considered in max-connections and disk-use. If you provide start time, you have to provide end time as well and vice versa.",
        "operationId": "ListMetrics",
        "parameters": [
          {
            "description": "The UUID of the project.",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The UUID of the instance.",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The name of the metric. Valid metrics are 'cpu', 'memory', 'data-disk-size', 'data-disk-use','log-disk-size', 'log-disk-use', 'life-expectancy' and 'connections'.",
            "explode": false,
            "in": "path",
            "name": "metric",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The granularity in ISO8601 e.g. 5 minutes are 'PT5M'.",
            "explode": true,
            "in": "query",
            "name": "granularity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The period in ISO8601 format e.g. 5 minutes are 'PT5M'. If no period is provided, the standard value of 5 minutes is used.",
            "explode": true,
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The start of the timeframe as timestamp in ISO8601 (RFC3339) e.g. '2023-08-28T07:10:52.536Z'. If no start time is provided, current server time as UTC is used.",
            "explode": true,
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The end of the timeframe as timestamp in ISO8601 (RFC3339) e.g. '2023-08-28T07:10:52.536Z'.",
            "explode": true,
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMetricsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Metric",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.metric.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/restores": {
      "get": {
        "description": "List all currently running restore jobs which are available for a specific instance",
        "operationId": "ListRestoreJobs",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRestoreJobsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List current running restore jobs",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.restore.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/roles": {
      "get": {
        "description": "List available roles for an instance that can be assigned to a user",
        "operationId": "ListRoles",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRolesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Roles",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.role.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users": {
      "get": {
        "description": "List available users for an instance",
        "operationId": "ListUsers",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List Users",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.user.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "post": {
        "description": "Create user for an instance",
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserPayload"
              }
            }
          },
          "description": "The request body contains a username, a list of roles and database. The possible roles  can be fetched from the ListRoles endpoint.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create User",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.user.create"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}": {
      "delete": {
        "description": "Delete user for an instance",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "User ID",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete User",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.user.delete"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      },
      "get": {
        "description": "Get specific available user for an instance",
        "operationId": "GetUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "User ID",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get User",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.user.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}/reset": {
      "post": {
        "description": "Reset user password for a mssql instance",
        "operationId": "ResetUser",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": false,
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "user ID",
            "explode": false,
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetUserResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reset User",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.user.reset"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/storages/{flavorId}": {
      "get": {
        "description": "Get available storages for a specific flavor",
        "operationId": "ListStorages",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Flavor ID",
            "explode": false,
            "in": "path",
            "name": "flavorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStoragesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Storages",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.storage.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    },
    "/v1/projects/{projectId}/versions": {
      "get": {
        "description": "Get available versions for mssql database",
        "operationId": "ListVersions",
        "parameters": [
          {
            "description": "Project ID",
            "explode": false,
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Instance ID",
            "explode": true,
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVersionsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Versions",
        "x-stackit-authorization": {
          "actions": [
            "sqlserver-flex.version.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://mssql-flex-service.api.{region}stackit.cloud",
      "variables": {
        "region": {
          "default": "eu01.",
          "enum": [
            "eu01."
          ]
        }
      }
    }
  ]
}