{
  "components": {
    "parameters": {
      "cursor": {
        "description": "A pagination cursor that represents a position in the dataset. If given, results will be returned from the item after the cursor. If not given, results will be returned from the beginning.",
        "in": "query",
        "name": "cursor",
        "schema": {
          "$ref": "#/components/schemas/cursor"
        }
      },
      "filter": {
        "description": "Filter the products based on attributes, e.g., `deliveryMethod eq \"SAAS\"`. The supported operators are:\n- `PR` (present; `name pr`)\n- `EQ` (equal)\n- `NE` (not equal)\n- `CO` (contains; `text co \"searching\"`)\n- `SW` (starts with)\n- `EW` (ends with)\n- `GT` (greater than)\n- `LT` (less than)\n- `GE` (greater than or equal)\n- `LE` (less than or equal). \n\nThese expressions can be logically linked with `AND` and `OR`. All attributes (and the special `text` attribute) can be used as filters, if the attribute type allows the operator.\n",
        "example": "deliveryMethod eq \"SAAS\"",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "The maximum number of items to return in the response. If maximum is exceeded, maximum is used.",
        "in": "query",
        "name": "limit",
        "schema": {
          "$ref": "#/components/schemas/limit"
        }
      },
      "locale": {
        "description": "The language of the response.",
        "example": "de",
        "in": "query",
        "name": "locale",
        "schema": {
          "default": "en",
          "enum": [
            "en",
            "de"
          ],
          "type": "string"
        }
      },
      "offset": {
        "description": "The offset of the first item in the collection to return.",
        "example": 2,
        "in": "query",
        "name": "offset",
        "schema": {
          "type": "number"
        }
      },
      "pathParamProductId": {
        "description": "The product ID.",
        "in": "path",
        "name": "productId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/productId"
        },
        "style": "simple"
      },
      "pathParamProjectId": {
        "description": "The project ID.",
        "in": "path",
        "name": "projectId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        },
        "style": "simple"
      },
      "pathParamSubscriptionId": {
        "description": "The subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        },
        "style": "simple"
      },
      "queryParamProductId": {
        "description": "The product ID.",
        "in": "query",
        "name": "productId",
        "schema": {
          "$ref": "#/components/schemas/productId"
        }
      },
      "sort": {
        "description": "Sort the products based on attributes and order e.g. `name:asc`. Attributes with scalar types (`createdAt`, `isProductListing`) or keywords (`name`, `deliveryMethod`, `lifecycleState`, `vendor.name`) can be used as sort criteria. To set the sort order, append `asc` (ascending) or `desc` (descending) to the attribute, e.g. `name:asc`. To sort by multiple attributes, separate them with a comma. E.g `name:asc,price:desc`.",
        "example": "name:asc",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {
            "examples": {
              "Bad Request": {
                "value": {
                  "error": "Bad Request",
                  "message": "Validation of {param-one} failed.",
                  "path": "/path/where/error/occurred",
                  "status": 400,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Malformed input"
      },
      "Forbidden": {
        "content": {
          "application/json": {
            "examples": {
              "Forbidden": {
                "value": {
                  "error": "Forbidden",
                  "message": "Access to this resource is forbidden.",
                  "path": "/path/where/error/occurred",
                  "status": 403,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Forbidden"
      },
      "NotFound": {
        "content": {
          "application/json": {
            "examples": {
              "Not Found": {
                "value": {
                  "error": "Not Found",
                  "message": "{resource} not found.",
                  "path": "/path/where/error/occurred",
                  "status": 404,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Not Found"
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "examples": {
              "Unauthorized": {
                "value": {
                  "error": "Unauthorized",
                  "message": "Access to this resource requires authentication.",
                  "path": "/path/where/error/occurred",
                  "status": 401,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Unauthorized"
      }
    },
    "schemas": {
      "ApproveSubscriptionPayload": {
        "properties": {
          "instanceTarget": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The target URL of the user instance, used to redirect the user to the instance after the subscription is active.",
            "example": "https://marketplace-application.com/register?x-stackitâ€“marketplace-token=eC1zdGFja2l0LW1hcmtldHBsYWNlLXRva2Vu"
          }
        },
        "type": "object"
      },
      "CatalogPricingOptionHighlight": {
        "properties": {
          "highlightContent": {
            "$ref": "#/components/schemas/catalogHighlightContent"
          }
        },
        "type": "object"
      },
      "CatalogProductDetail": {
        "properties": {
          "categories": {
            "$ref": "#/components/schemas/productCategories"
          },
          "deliveryMethod": {
            "$ref": "#/components/schemas/deliveryMethod"
          },
          "description": {
            "$ref": "#/components/schemas/productDescription"
          },
          "documentationUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The documentation URL."
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "highlights": {
            "description": "The list of highlights.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductHighlight"
            },
            "type": "array"
          },
          "industries": {
            "$ref": "#/components/schemas/productIndustries"
          },
          "isProductListing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/bool"
              }
            ],
            "deprecated": true,
            "description": "If true, the product is not fully integrated but only listed. Product listings may not have prices and support information. \n\nDeprecated: Will be removed after 16.12.2025. Please use `offerType` as replacement."
          },
          "lifecycleState": {
            "$ref": "#/components/schemas/productLifecycleState"
          },
          "logo": {
            "$ref": "#/components/schemas/logo"
          },
          "name": {
            "$ref": "#/components/schemas/productName"
          },
          "offerType": {
            "$ref": "#/components/schemas/offerType"
          },
          "pricingOptions": {
            "description": "The list of pricing options.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductPricingOption"
            },
            "type": "array"
          },
          "productId": {
            "$ref": "#/components/schemas/productId"
          },
          "summary": {
            "$ref": "#/components/schemas/productSummary"
          },
          "supportFaq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The support FAQ URL."
          },
          "supportPhone": {
            "$ref": "#/components/schemas/supportPhone"
          },
          "supportResources": {
            "description": "The list of support resources.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductSupportResource"
            },
            "type": "array"
          },
          "vendor": {
            "$ref": "#/components/schemas/CatalogProductDetailsVendor"
          },
          "vendorTerms": {
            "description": "The list of terms of use.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductVendorTerms"
            },
            "type": "array"
          },
          "videoUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The video URL."
          }
        },
        "required": [
          "productId",
          "name",
          "pricingOptions",
          "deliveryMethod",
          "logo",
          "videoUrl",
          "summary",
          "description",
          "documentationUrl",
          "highlights",
          "vendor",
          "offerType",
          "lifecycleState"
        ],
        "type": "object"
      },
      "CatalogProductDetailsVendor": {
        "properties": {
          "description": {
            "$ref": "#/components/schemas/vendorDescription"
          },
          "logo": {
            "$ref": "#/components/schemas/logo"
          },
          "name": {
            "$ref": "#/components/schemas/vendorName"
          },
          "vendorId": {
            "$ref": "#/components/schemas/UUID"
          },
          "videoUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The vendor video URL."
          },
          "websiteUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The vendor website URL."
          }
        },
        "required": [
          "vendorId",
          "name",
          "description",
          "logo",
          "websiteUrl",
          "videoUrl"
        ],
        "type": "object"
      },
      "CatalogProductFacets": {
        "additionalProperties": {
          "items": {
            "properties": {
              "count": {
                "description": "The number of items associated with this facet value.",
                "format": "int32",
                "type": "integer"
              },
              "value": {
                "description": "The value of the facet.",
                "type": "string"
              }
            },
            "required": [
              "value",
              "count"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "description": "A collection of facets, where each key represents a facet category.",
        "example": {
          "categories": [
            {
              "count": 20,
              "value": "Infrastructure Software"
            },
            {
              "count": 5,
              "value": "Data Products"
            }
          ],
          "industries": [
            {
              "count": 15,
              "value": "eGovernment"
            },
            {
              "count": 12,
              "value": "Retail"
            }
          ]
        },
        "type": "object"
      },
      "CatalogProductHighlight": {
        "properties": {
          "highlightContent": {
            "$ref": "#/components/schemas/catalogHighlightContent"
          },
          "highlightIcon": {
            "$ref": "#/components/schemas/catalogHighlightIcon"
          },
          "highlightTitle": {
            "$ref": "#/components/schemas/catalogHighlightTitle"
          }
        },
        "type": "object"
      },
      "CatalogProductOverview": {
        "properties": {
          "deliveryMethod": {
            "$ref": "#/components/schemas/deliveryMethod"
          },
          "lifecycleState": {
            "$ref": "#/components/schemas/productLifecycleState"
          },
          "logo": {
            "$ref": "#/components/schemas/logo"
          },
          "name": {
            "$ref": "#/components/schemas/productName"
          },
          "productId": {
            "$ref": "#/components/schemas/productId"
          },
          "summary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/message"
              }
            ],
            "description": "The short summary of the product."
          },
          "vendor": {
            "$ref": "#/components/schemas/CatalogProductOverviewVendor"
          }
        },
        "required": [
          "productId",
          "name",
          "deliveryMethod",
          "summary",
          "vendor",
          "lifecycleState"
        ],
        "type": "object"
      },
      "CatalogProductOverviewVendor": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/vendorName"
          },
          "vendorId": {
            "$ref": "#/components/schemas/UUID"
          },
          "websiteUrl": {
            "$ref": "#/components/schemas/url"
          }
        },
        "required": [
          "vendorId",
          "name",
          "websiteUrl"
        ],
        "type": "object"
      },
      "CatalogProductPricingOption": {
        "properties": {
          "description": {
            "$ref": "#/components/schemas/pricingOptionDescription"
          },
          "highlights": {
            "description": "The list of highlights.",
            "items": {
              "$ref": "#/components/schemas/CatalogPricingOptionHighlight"
            },
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/pricingOptionName"
          },
          "priceType": {
            "$ref": "#/components/schemas/priceType"
          },
          "pricingPlan": {
            "$ref": "#/components/schemas/pricingPlan"
          },
          "rate": {
            "$ref": "#/components/schemas/pricingOptionRate"
          },
          "sku": {
            "$ref": "#/components/schemas/sku"
          },
          "skuInfo": {
            "$ref": "#/components/schemas/skuInfo"
          },
          "skuInfoDetails": {
            "$ref": "#/components/schemas/skuInfoDetails"
          },
          "unit": {
            "$ref": "#/components/schemas/pricingOptionUnit"
          }
        },
        "required": [
          "name",
          "description",
          "sku",
          "skuInfo",
          "skuInfoDetails",
          "highlights"
        ],
        "type": "object"
      },
      "CatalogProductSupportResource": {
        "properties": {
          "supportLink": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The support resource link."
          },
          "supportLinkTitle": {
            "$ref": "#/components/schemas/supportLinkTitle"
          }
        },
        "type": "object"
      },
      "CatalogProductVendorTerms": {
        "properties": {
          "description": {
            "$ref": "#/components/schemas/tosDescription"
          },
          "title": {
            "$ref": "#/components/schemas/tosTitle"
          },
          "url": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The terms of use url."
          }
        },
        "required": [
          "url",
          "title",
          "description"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "error": {
            "description": "Reason phrase of the status code.",
            "example": "status code phrase",
            "type": "string"
          },
          "message": {
            "description": "Description of the error.",
            "example": "error message example",
            "type": "string"
          },
          "path": {
            "description": "Path which was called.",
            "example": "/path/where/error/occurred",
            "type": "string"
          },
          "status": {
            "description": "HTTP response status code.",
            "example": 500,
            "format": "int32",
            "type": "integer"
          },
          "timeStamp": {
            "description": "Timestamp at which the error occurred.",
            "example": "2019-08-24T14:15:22Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "error",
          "message",
          "path",
          "status",
          "timeStamp"
        ],
        "type": "object"
      },
      "InquiryBecomeVendor": {
        "description": "Become a vendor.",
        "properties": {
          "contactEmail": {
            "$ref": "#/components/schemas/email"
          },
          "message": {
            "$ref": "#/components/schemas/message"
          }
        },
        "required": [
          "contactEmail",
          "message"
        ],
        "title": "becomeVendor",
        "type": "object"
      },
      "InquiryContactSales": {
        "description": "Contact sales.",
        "properties": {
          "companyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/vendorName"
              }
            ],
            "description": "The company name."
          },
          "contactEmail": {
            "$ref": "#/components/schemas/email"
          },
          "fullName": {
            "$ref": "#/components/schemas/contactPersonName"
          },
          "message": {
            "$ref": "#/components/schemas/message"
          },
          "productId": {
            "$ref": "#/components/schemas/productId"
          }
        },
        "required": [
          "productId",
          "fullName",
          "companyName",
          "contactEmail",
          "message"
        ],
        "title": "contactSales",
        "type": "object"
      },
      "InquiryRegisterTesting": {
        "description": "Register for testing.",
        "properties": {
          "contactEmail": {
            "$ref": "#/components/schemas/email"
          },
          "fullName": {
            "$ref": "#/components/schemas/contactPersonName"
          },
          "message": {
            "$ref": "#/components/schemas/message"
          }
        },
        "required": [
          "fullName",
          "contactEmail",
          "message"
        ],
        "title": "registerTesting",
        "type": "object"
      },
      "InquirySuggestProduct": {
        "description": "Suggest a product.",
        "properties": {
          "companyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/vendorName"
              }
            ],
            "description": "The suggested product's company name."
          },
          "message": {
            "$ref": "#/components/schemas/message"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/productName"
              }
            ],
            "description": "The suggested product name."
          },
          "url": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The suggested product's website URL."
          }
        },
        "required": [
          "name",
          "companyName",
          "url"
        ],
        "title": "suggestProduct",
        "type": "object"
      },
      "ListCatalogProductsResponse": {
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/cursor"
          },
          "facets": {
            "$ref": "#/components/schemas/CatalogProductFacets"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/CatalogProductOverview"
            },
            "type": "array"
          },
          "limit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/limit"
              }
            ],
            "default": 50
          }
        },
        "required": [
          "items",
          "cursor",
          "limit"
        ],
        "type": "object"
      },
      "ListVendorSubscriptionsResponse": {
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/cursor"
          },
          "items": {
            "description": "List of subscriptions.",
            "items": {
              "$ref": "#/components/schemas/VendorSubscription"
            },
            "type": "array"
          },
          "limit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/limit"
              }
            ],
            "default": 50
          }
        },
        "required": [
          "items",
          "cursor",
          "limit"
        ],
        "type": "object"
      },
      "ResolveCustomerPayload": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/customerToken"
          }
        },
        "required": [
          "token"
        ],
        "type": "object"
      },
      "SubscriptionProduct": {
        "description": "The product of a subscription",
        "properties": {
          "deliveryMethod": {
            "$ref": "#/components/schemas/deliveryMethod"
          },
          "lifecycleState": {
            "$ref": "#/components/schemas/productLifecycleState"
          },
          "priceType": {
            "$ref": "#/components/schemas/priceType"
          },
          "pricingPlan": {
            "$ref": "#/components/schemas/pricingPlan"
          },
          "productId": {
            "$ref": "#/components/schemas/productId"
          },
          "productName": {
            "$ref": "#/components/schemas/productName"
          },
          "vendorName": {
            "$ref": "#/components/schemas/vendorName"
          },
          "vendorPlanId": {
            "$ref": "#/components/schemas/vendorPlanId"
          },
          "vendorProductId": {
            "$ref": "#/components/schemas/vendorProductId"
          },
          "vendorWebsiteUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/url"
              }
            ],
            "description": "The vendor's website."
          }
        },
        "required": [
          "productId",
          "productName",
          "priceType",
          "deliveryMethod",
          "pricingPlan",
          "vendorName",
          "vendorWebsiteUrl",
          "lifecycleState"
        ],
        "type": "object"
      },
      "UUID": {
        "description": "Universally Unique Identifier (UUID).",
        "example": "14fef715-4ef3-4b10-8789-cd7f9bd09421",
        "format": "uuid",
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "type": "string"
      },
      "VendorSubscription": {
        "properties": {
          "lifecycleState": {
            "$ref": "#/components/schemas/subscriptionLifecycleState"
          },
          "organizationId": {
            "$ref": "#/components/schemas/UUID"
          },
          "product": {
            "$ref": "#/components/schemas/SubscriptionProduct"
          },
          "projectId": {
            "$ref": "#/components/schemas/UUID"
          },
          "subscriptionId": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "subscriptionId",
          "organizationId",
          "projectId",
          "lifecycleState",
          "product"
        ],
        "type": "object"
      },
      "bool": {
        "description": "Boolean data type.",
        "example": true,
        "type": "boolean"
      },
      "catalogHighlightContent": {
        "description": "The highlight content.",
        "example": "this is the content of the best highlight ever",
        "type": "string"
      },
      "catalogHighlightIcon": {
        "description": "The highlight icon.",
        "example": "rocket",
        "type": "string"
      },
      "catalogHighlightTitle": {
        "description": "The highlight title.",
        "example": "best highlight ever",
        "type": "string"
      },
      "contactPersonName": {
        "description": "The full name of the contact person.",
        "example": "Max Mustermann",
        "maxLength": 512,
        "pattern": "^[a-zA-ZÃ¤Ã¼Ã¶Ã„ÃœÃ–0-9,.!?()@\\/:=\\n\\t -]+$",
        "type": "string"
      },
      "cursor": {
        "description": "A pagination cursor that represents a position in the dataset. If given, results will be returned from the item after the cursor. If not given, results will be returned from the beginning.",
        "example": "eyJrZXkiOiJ2YWx1ZSJ9",
        "type": "string"
      },
      "customerToken": {
        "description": "Opaque token exchangeable for subscription details.",
        "example": "VGhpcyBpcyBhIHRva2VuIGJ5IGRvbW15IHRva2VuIGFuZCBiYXNlNjQgZW5jb2RlZA==",
        "type": "string"
      },
      "deliveryMethod": {
        "description": "The product delivery method/type. For reference: SAAS - Software as a Service, SAI - STACKIT Application Image",
        "enum": [
          "SAAS",
          "KUBERNETES",
          "SAI",
          "PROFESSIONAL_SERVICE"
        ],
        "example": "SAAS",
        "format": "enum",
        "type": "string"
      },
      "email": {
        "description": "A e-mail address.",
        "example": "example@stackit.de",
        "format": "email",
        "type": "string"
      },
      "inquiries-create-inquiryPayload": {
        "oneOf": [
          {
            "description": "Suggest a product.",
            "properties": {
              "suggestProduct": {
                "$ref": "#/components/schemas/InquirySuggestProduct"
              },
              "type": {
                "$ref": "#/components/schemas/inquiryFormType"
              }
            },
            "required": [
              "type",
              "suggestProduct"
            ],
            "title": "suggestProduct",
            "type": "object"
          },
          {
            "description": "Contact sales.",
            "properties": {
              "contactSales": {
                "$ref": "#/components/schemas/InquiryContactSales"
              },
              "type": {
                "$ref": "#/components/schemas/inquiryFormType"
              }
            },
            "required": [
              "type",
              "contactSales"
            ],
            "title": "contactSales",
            "type": "object"
          },
          {
            "description": "Become a Vendor.",
            "properties": {
              "becomeVendor": {
                "$ref": "#/components/schemas/InquiryBecomeVendor"
              },
              "type": {
                "$ref": "#/components/schemas/inquiryFormType"
              }
            },
            "required": [
              "type",
              "becomeVendor"
            ],
            "title": "becomeVendor",
            "type": "object"
          },
          {
            "description": "Register for testing.",
            "properties": {
              "registerTesting": {
                "$ref": "#/components/schemas/InquiryRegisterTesting"
              },
              "type": {
                "$ref": "#/components/schemas/inquiryFormType"
              }
            },
            "required": [
              "type",
              "registerTesting"
            ],
            "title": "registerTesting",
            "type": "object"
          }
        ],
        "type": "object"
      },
      "inquiryFormType": {
        "description": "The form type.",
        "enum": [
          "suggestProduct",
          "contactSales",
          "becomeVendor",
          "registerTesting"
        ],
        "format": "enum",
        "type": "string"
      },
      "limit": {
        "description": "Limit for returned Objects.",
        "example": 50,
        "maximum": 100,
        "minimum": 0,
        "type": "number"
      },
      "logo": {
        "description": "The logo base64 encoded.",
        "format": "byte",
        "type": "string"
      },
      "message": {
        "description": "A custom message.",
        "example": "A very custom message.",
        "maxLength": 512,
        "pattern": "^[a-zA-ZÃ¤Ã¼Ã¶Ã„ÃœÃ–0-9,.!?()@\\/:=\\n\\t -]+$",
        "type": "string"
      },
      "offerType": {
        "description": "The offer type of a product reflecting the business model.",
        "enum": [
          "OFFER_LISTING",
          "OFFER_RESELLING"
        ],
        "example": "OFFER_LISTING",
        "format": "enum",
        "type": "string"
      },
      "priceType": {
        "description": "The product's price type.",
        "enum": [
          "CONTRACT",
          "FREE",
          "FREE_TRIAL",
          "BYOL",
          "PAYG"
        ],
        "example": "CONTRACT",
        "format": "enum",
        "type": "string"
      },
      "pricingOptionDescription": {
        "description": "The pricing option description.",
        "example": "Product Premium Plan.",
        "type": "string"
      },
      "pricingOptionName": {
        "description": "The pricing option name.",
        "example": "Premium Plan",
        "type": "string"
      },
      "pricingOptionRate": {
        "description": "The price of the product (per unit).",
        "example": "9,90â‚¬",
        "type": "string"
      },
      "pricingOptionUnit": {
        "description": "The interval to which the rate applies.",
        "enum": [
          "month"
        ],
        "example": "month",
        "format": "enum",
        "type": "string"
      },
      "pricingPlan": {
        "description": "Additional price type information.",
        "example": "Monthly subscription",
        "type": "string"
      },
      "productCategories": {
        "description": "The list of categories associated to the product.",
        "items": {
          "example": "Infrastructure Software",
          "type": "string"
        },
        "type": "array"
      },
      "productDescription": {
        "description": "The product description.",
        "example": "very nice description!",
        "type": "string"
      },
      "productId": {
        "description": "The user-readable product ID.",
        "example": "marketplace-product-4c531ae5",
        "maxLength": 29,
        "minLength": 10,
        "pattern": "^[a-z0-9-]{1,20}-[0-9a-f]{8}$",
        "type": "string"
      },
      "productIndustries": {
        "description": "The list of industries associated to the product.",
        "items": {
          "example": "Healthcare \u0026 Science",
          "type": "string"
        },
        "type": "array"
      },
      "productLifecycleState": {
        "description": "The lifecycle state of the product.",
        "enum": [
          "PRODUCT_LIVE",
          "PRODUCT_PREVIEW"
        ],
        "example": "PRODUCT_LIVE",
        "format": "enum",
        "type": "string"
      },
      "productName": {
        "description": "The name of the product.",
        "example": "Cool Product Name",
        "maxLength": 512,
        "pattern": "^[a-zA-ZÃ¤Ã¼Ã¶Ã„ÃœÃ–0-9,.!?()@\\/:=\\n\\t -]+$",
        "type": "string"
      },
      "productSummary": {
        "description": "The short summary of the product.",
        "example": "short summary of product subscription.",
        "type": "string"
      },
      "projectId": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UUID"
          }
        ],
        "description": "The associated project ID."
      },
      "sku": {
        "description": "The concrete variant of the product.",
        "example": "MP-1234",
        "type": "string"
      },
      "skuInfo": {
        "description": "Short description of this offering.",
        "example": "Flexible and scalable",
        "type": "string"
      },
      "skuInfoDetails": {
        "description": "More details about what this offering entails.",
        "example": "Access the full suite of the Product features with this plan.",
        "type": "string"
      },
      "subscriptionId": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UUID"
          }
        ],
        "description": "The subscription ID."
      },
      "subscriptionLifecycleState": {
        "description": "Lifecycle state of the subscription.",
        "enum": [
          "SUBSCRIPTION_PENDING",
          "SUBSCRIPTION_ACTIVE",
          "SUBSCRIPTION_INACTIVE",
          "SUBSCRIPTION_CANCELLING",
          "SUBSCRIPTION_CANCELLED",
          "SUBSCRIPTION_REJECTED"
        ],
        "example": "SUBSCRIPTION_ACTIVE",
        "format": "enum",
        "type": "string"
      },
      "supportLinkTitle": {
        "description": "The support resource link title.",
        "example": "contact our support",
        "type": "string"
      },
      "supportPhone": {
        "description": "The phone number for support inquiries.",
        "example": "+49 800 187187187",
        "type": "string"
      },
      "tosDescription": {
        "description": "The terms of service description.",
        "example": "See the terms and conditions of this product.",
        "type": "string"
      },
      "tosTitle": {
        "description": "The terms of service title.",
        "example": "Vendor Terms of Service",
        "type": "string"
      },
      "url": {
        "description": "Uniform Resource Locator.",
        "example": "https://example.com",
        "maxLength": 512,
        "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
        "type": "string"
      },
      "vendorDescription": {
        "description": "The vendor description.",
        "example": "This is the example vendor.",
        "type": "string"
      },
      "vendorId": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UUID"
          }
        ],
        "description": "The vendor ID."
      },
      "vendorName": {
        "description": "The product's vendor name.",
        "example": "STACKIT",
        "maxLength": 512,
        "pattern": "^[a-zA-ZÃ¤Ã¼Ã¶Ã„ÃœÃ–0-9,.!?()@\\/:=\\n\\t -]+$",
        "type": "string"
      },
      "vendorPlanId": {
        "description": "The vendor provided plan ID.",
        "example": "custom-plan-id-123",
        "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9_+\u0026-]){0,39}$",
        "type": "string"
      },
      "vendorProductId": {
        "description": "The vendor provided product ID.",
        "example": "custom-vendor-id-123",
        "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9_+\u0026-]){0,39}$",
        "type": "string"
      }
    }
  },
  "info": {
    "contact": {
      "email": "marketplace@stackit.cloud",
      "name": "STACKIT Marketplace"
    },
    "description": "API to manage STACKIT Marketplace.",
    "termsOfService": "https://stackit.de/en/imprint",
    "title": "STACKIT Marketplace API",
    "version": "1"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/catalog/products": {
      "get": {
        "description": "List all products.",
        "operationId": "ListCatalogProducts",
        "parameters": [
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/locale"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogProductsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "summary": "List all products",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    },
    "/v1/catalog/products/{productId}": {
      "get": {
        "description": "Get a product.",
        "operationId": "GetCatalogProduct",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProductId"
          },
          {
            "$ref": "#/components/parameters/locale"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProductDetail"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get a product",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    },
    "/v1/inquiries": {
      "post": {
        "description": "Create an inquiry to contact sales, become a vendor, or suggest a product. Requests are limited to 10 per 5 minutes.",
        "operationId": "inquiries-create-inquiry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inquiries-create-inquiryPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Create inquiry",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    },
    "/v1/vendors/projects/{projectId}/resolve-customer": {
      "post": {
        "description": "Get details about the requested subscription.",
        "operationId": "ResolveCustomer",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveCustomerPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorSubscription"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Resolve customer",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.approve"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions": {
      "get": {
        "description": "List all subscriptions of a project.",
        "operationId": "ListVendorSubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/queryParamProductId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVendorSubscriptionsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "summary": "List all subscriptions of a project.",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions/{subscriptionId}": {
      "get": {
        "description": "Get a subscription.",
        "operationId": "GetVendorSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/pathParamSubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorSubscription"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get a subscription",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions/{subscriptionId}/approve": {
      "post": {
        "description": "Approve a pending subscription.",
        "operationId": "ApproveSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/pathParamSubscriptionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveSubscriptionPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Approve a subscription",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.approve"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions/{subscriptionId}/reject": {
      "post": {
        "description": "Reject a subscription (in any lifecycle state). Only available for subscriptions to products with lifecycle state `PRODUCT_PREVIEW`.",
        "operationId": "vendors-subscriptions-reject",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/pathParamSubscriptionId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Reject a subscription",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.reject"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://stackit-marketplace.api.stackit.cloud",
      "variables": {
        "region": {
          "default": "global"
        }
      }
    }
  ]
}