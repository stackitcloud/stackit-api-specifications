{
  "components": {
    "parameters": {
      "cursor": {
        "description": "A pagination cursor that represents a position in the dataset. If given, results will be returned from the item after the cursor. If not given, results will be returned from the beginning.",
        "in": "query",
        "name": "cursor",
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "description": "Filter the products based on attributes. E.g `deliveryMethod eq \"SAAS\"`. The supported attributes are `deliveryMethod`, `priceType`, `category`, `vendorId`, `vendorName`, and `name`. The supported operators are `eq`. Filters can be joined with `and` or `or`.",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "The maximum number of items to return in the response. If maximum is exceeded, maximum is used.",
        "in": "query",
        "name": "limit",
        "schema": {
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        }
      },
      "locale": {
        "description": "The language of the response.",
        "in": "query",
        "name": "locale",
        "schema": {
          "default": "en",
          "enum": [
            "en",
            "de"
          ],
          "type": "string"
        }
      },
      "offset": {
        "description": "The offset of the first item in the collection to return.",
        "in": "query",
        "name": "offset",
        "schema": {
          "minimum": 0,
          "type": "number"
        }
      },
      "pathParamProductId": {
        "description": "The product ID.",
        "in": "path",
        "name": "productId",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "style": "simple"
      },
      "pathParamProjectId": {
        "description": "The project ID.",
        "in": "path",
        "name": "projectId",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "style": "simple"
      },
      "pathParamSubscriptionId": {
        "description": "The subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "style": "simple"
      },
      "queryParamProductId": {
        "description": "The product ID.",
        "in": "query",
        "name": "productId",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "sort": {
        "description": "Sort the products based on attributes and order (if specified). E.g `name:asc`. The supported attributes are `name`, `price`, and `deliveryMethod`. To set the sort order, append `asc` (ascending) or `desc` (descending) to the attribute, e.g. `name:asc`. To sort by multiple attributes, separate them with a comma. E.g `name,price:desc`. The order can be ommited to sort by the default order. E.g `name`.",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {
            "examples": {
              "Bad Request": {
                "value": {
                  "error": "Bad Request",
                  "message": "Validation of {param-one} failed.",
                  "path": "/path/where/error/occurred",
                  "status": 400,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Malformed input"
      },
      "Forbidden": {
        "content": {
          "application/json": {
            "examples": {
              "Forbidden": {
                "value": {
                  "error": "Forbidden",
                  "message": "Access to this resource is forbidden.",
                  "path": "/path/where/error/occurred",
                  "status": 403,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Forbidden"
      },
      "NotFound": {
        "content": {
          "application/json": {
            "examples": {
              "Not Found": {
                "value": {
                  "error": "Not Found",
                  "message": "{resource} not found.",
                  "path": "/path/where/error/occurred",
                  "status": 404,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Not Found"
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "examples": {
              "Unauthorized": {
                "value": {
                  "error": "Unauthorized",
                  "message": "Access to this resource requires authentication.",
                  "path": "/path/where/error/occurred",
                  "status": 401,
                  "timeStamp": "2019-08-24T14:15:22Z"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "Unauthorized"
      }
    },
    "schemas": {
      "ApproveSubscriptionPayload": {
        "properties": {
          "instanceTarget": {
            "description": "The target URL of the user instance, used to redirect the user to the instance after the subscription is active.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CatalogPricingOptionHighlight": {
        "properties": {
          "highlightContent": {
            "description": "The highlight content.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CatalogProductDetail": {
        "properties": {
          "categories": {
            "description": "The list of categories associated to the product.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "deliveryMethod": {
            "description": "The product type. For reference: SAAS - Software as a Service, SAI - STACKIT Application Image",
            "enum": [
              "SAAS",
              "KUBERNETES",
              "SAI",
              "PROFESSIONAL_SERVICE"
            ],
            "format": "enum",
            "type": "string"
          },
          "description": {
            "description": "The product description.",
            "type": "string"
          },
          "documentationUrl": {
            "description": "The documentation URL.",
            "format": "url",
            "type": "string"
          },
          "highlights": {
            "description": "The list of highlights.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductHighlight"
            },
            "type": "array"
          },
          "isProductListing": {
            "description": "If true, the product is not fully integrated but only listed. Product listings may not have prices and support information.",
            "type": "boolean"
          },
          "lifecycleState": {
            "description": "The lifecycle state of the product.",
            "enum": [
              "PRODUCT_LIVE",
              "PRODUCT_PREVIEW"
            ],
            "format": "enum",
            "type": "string"
          },
          "logo": {
            "description": "The logo base64 encoded.",
            "format": "base64",
            "type": "string"
          },
          "name": {
            "description": "The product name.",
            "type": "string"
          },
          "pricingOptions": {
            "description": "The list of pricing options.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductPricingOption"
            },
            "type": "array"
          },
          "productId": {
            "description": "The product ID.",
            "format": "uuid",
            "type": "string"
          },
          "summary": {
            "description": "The short summary of the product.",
            "type": "string"
          },
          "supportEmail": {
            "description": "The e-mail address for support inquiries.",
            "format": "email",
            "type": "string"
          },
          "supportFaq": {
            "description": "The support FAQ URL.",
            "format": "url",
            "type": "string"
          },
          "supportPhone": {
            "description": "The phone number for support inquiries.",
            "type": "string"
          },
          "supportResources": {
            "description": "The list of support resources.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductSupportResource"
            },
            "type": "array"
          },
          "vendor": {
            "$ref": "#/components/schemas/CatalogProductDetailsVendor"
          },
          "vendorTerms": {
            "description": "The list of terms of use.",
            "items": {
              "$ref": "#/components/schemas/CatalogProductVendorTerms"
            },
            "type": "array"
          },
          "videoUrl": {
            "description": "The video URL.",
            "type": "string"
          }
        },
        "required": [
          "productId",
          "name",
          "pricingOptions",
          "deliveryMethod",
          "logo",
          "videoUrl",
          "summary",
          "description",
          "documentationUrl",
          "highlights",
          "vendor",
          "isProductListing",
          "lifecycleState"
        ],
        "type": "object"
      },
      "CatalogProductDetailsVendor": {
        "properties": {
          "description": {
            "description": "The vendor description.",
            "type": "string"
          },
          "logo": {
            "description": "The vendor logo base64 encoded.",
            "format": "base64",
            "type": "string"
          },
          "name": {
            "description": "The vendor name.",
            "type": "string"
          },
          "vendorId": {
            "description": "The vendor ID.",
            "format": "uuid",
            "type": "string"
          },
          "videoUrl": {
            "description": "The vendor video URL.",
            "format": "url",
            "type": "string"
          },
          "websiteUrl": {
            "description": "The vendor website URL.",
            "format": "url",
            "type": "string"
          }
        },
        "required": [
          "vendorId",
          "name",
          "description",
          "logo",
          "websiteUrl",
          "videoUrl"
        ],
        "type": "object"
      },
      "CatalogProductHighlight": {
        "properties": {
          "highlightContent": {
            "description": "The highlight content.",
            "type": "string"
          },
          "highlightIcon": {
            "description": "The highlight icon.",
            "type": "string"
          },
          "highlightTitle": {
            "description": "The highlight title.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CatalogProductOverview": {
        "properties": {
          "deliveryMethod": {
            "description": "The product type. For reference: SAAS - Software as a Service, SAI - STACKIT Application Image",
            "enum": [
              "SAAS",
              "KUBERNETES",
              "SAI",
              "PROFESSIONAL_SERVICE"
            ],
            "format": "enum",
            "type": "string"
          },
          "lifecycleState": {
            "description": "The lifecycle state of the product.",
            "enum": [
              "PRODUCT_LIVE",
              "PRODUCT_PREVIEW"
            ],
            "format": "enum",
            "type": "string"
          },
          "logo": {
            "description": "The logo base64 encoded.",
            "format": "base64",
            "type": "string"
          },
          "name": {
            "description": "The product name.",
            "type": "string"
          },
          "productId": {
            "description": "The product ID.",
            "format": "uuid",
            "type": "string"
          },
          "summary": {
            "description": "The short summary of the product.",
            "type": "string"
          },
          "vendor": {
            "$ref": "#/components/schemas/CatalogProductOverviewVendor"
          }
        },
        "required": [
          "productId",
          "name",
          "deliveryMethod",
          "summary",
          "vendor",
          "lifecycleState"
        ],
        "type": "object"
      },
      "CatalogProductOverviewVendor": {
        "properties": {
          "name": {
            "description": "The vendor name.",
            "type": "string"
          },
          "vendorId": {
            "description": "The vendor ID.",
            "format": "uuid",
            "type": "string"
          },
          "websiteUrl": {
            "description": "The vendor website URL.",
            "format": "url",
            "type": "string"
          }
        },
        "required": [
          "vendorId",
          "name",
          "websiteUrl"
        ],
        "type": "object"
      },
      "CatalogProductPricingOption": {
        "properties": {
          "description": {
            "description": "The pricing option description.",
            "type": "string"
          },
          "highlights": {
            "description": "The list of highlights.",
            "items": {
              "$ref": "#/components/schemas/CatalogPricingOptionHighlight"
            },
            "type": "array"
          },
          "name": {
            "description": "The pricing option name.",
            "type": "string"
          },
          "priceType": {
            "description": "The price type / pricing model.",
            "enum": [
              "CONTRACT",
              "FREE",
              "FREE_TRIAL",
              "BYOL",
              "PAYG"
            ],
            "format": "enum",
            "type": "string"
          },
          "pricingPlan": {
            "description": "Additional price type information.",
            "type": "string"
          },
          "rate": {
            "description": "The price of the product (per unit).",
            "type": "string"
          },
          "sku": {
            "description": "The concrete variant of the product.",
            "type": "string"
          },
          "skuInfo": {
            "description": "Short description of this offering.",
            "type": "string"
          },
          "skuInfoDetails": {
            "description": "More details about what this offering entails.",
            "type": "string"
          },
          "unit": {
            "description": "The interval to which the rate applies.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "sku",
          "skuInfo",
          "skuInfoDetails",
          "highlights"
        ],
        "type": "object"
      },
      "CatalogProductSupportResource": {
        "properties": {
          "supportLink": {
            "description": "The support resource link.",
            "format": "url",
            "type": "string"
          },
          "supportLinkTitle": {
            "description": "The support resource link title.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CatalogProductVendorTerms": {
        "properties": {
          "description": {
            "description": "The terms of use description.",
            "type": "string"
          },
          "title": {
            "description": "The terms of use title.",
            "type": "string"
          },
          "url": {
            "description": "The terms of use url.",
            "type": "string"
          }
        },
        "required": [
          "url",
          "title",
          "description"
        ],
        "type": "object"
      },
      "CurrentSubscriptionStateResponse": {
        "example": {
          "lifecycleState": "SUBSCRIPTION_ACTIVE",
          "subscriptionId": "65791df4-2b07-4b52-99c7-783be4b0761d"
        },
        "properties": {
          "lifecycleState": {
            "description": "Lifecycle state of the subscription.",
            "enum": [
              "SUBSCRIPTION_PENDING",
              "SUBSCRIPTION_ACTIVE",
              "SUBSCRIPTION_INACTIVE",
              "SUBSCRIPTION_CANCELLING",
              "SUBSCRIPTION_CANCELLED",
              "SUBSCRIPTION_REJECTED"
            ],
            "format": "enum",
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "lifecycleState"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "error": {
            "description": "Reason phrase of the status code.",
            "type": "string"
          },
          "message": {
            "description": "Description of the error.",
            "type": "string"
          },
          "path": {
            "description": "Path which was called.",
            "type": "string"
          },
          "status": {
            "description": "HTTP response status code.",
            "format": "int32",
            "type": "integer"
          },
          "timeStamp": {
            "description": "Timestamp at which the error occurred.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "error",
          "message",
          "path",
          "status",
          "timeStamp"
        ],
        "type": "object"
      },
      "ListCatalogProductsResponse": {
        "properties": {
          "cursor": {
            "description": "A pagination cursor that represents a position in the dataset. Use it in subsequent requests to continue retrieving data from this position. If `null`, there are no more results to retrieve.",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/CatalogProductOverview"
            },
            "type": "array"
          },
          "limit": {
            "default": 50,
            "description": "The maximum number of items to return in the response. If not present, an appropriate default will be used. If maximum is exceeded, maximum is used.",
            "format": "int32",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "items",
          "cursor",
          "limit"
        ],
        "type": "object"
      },
      "ListVendorSubscriptionsResponse": {
        "example": {
          "cursor": "eyJrZXkiOiJ2YWx1ZSJ9",
          "items": [
            {
              "lifecycleState": "SUBSCRIPTION_PENDING",
              "product": {
                "deliveryMethod": "SAAS",
                "lifecycleState": "PRODUCT_LIVE",
                "priceType": "CONTRACT",
                "pricingPlan": "Test Plan",
                "productId": "2ea4b536-07c8-479e-a7a7-41ff724e053f",
                "productName": "Test Product Name",
                "vendorName": "STACKIT",
                "vendorWebsiteUrl": "https://example.com"
              },
              "projectId": "c5fedcab-920d-40cd-a06f-e7443db8e7f7",
              "subscriptionId": "e93750b2-3d5c-496e-844d-67c947e34c67"
            }
          ],
          "limit": 50
        },
        "properties": {
          "cursor": {
            "description": "A pagination cursor that represents a position in the dataset. Use it in subsequent requests to continue retrieving data from this position. If `null`, there are no more results to retrieve.",
            "type": "string"
          },
          "items": {
            "description": "List of subscriptions.",
            "items": {
              "$ref": "#/components/schemas/VendorSubscription"
            },
            "type": "array"
          },
          "limit": {
            "default": 50,
            "description": "Number of subscriptions returned for a single request.",
            "format": "int32",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "items",
          "cursor",
          "limit"
        ],
        "type": "object"
      },
      "RequestedSubscriptionStateResponse": {
        "example": {
          "lifecycleState": "SUBSCRIPTION_CANCELLING",
          "subscriptionId": "65791df4-2b07-4b52-99c7-783be4b0761d"
        },
        "properties": {
          "lifecycleState": {
            "description": "Lifecycle state of the subscription.",
            "enum": [
              "SUBSCRIPTION_PENDING",
              "SUBSCRIPTION_ACTIVE",
              "SUBSCRIPTION_INACTIVE",
              "SUBSCRIPTION_CANCELLING",
              "SUBSCRIPTION_CANCELLED",
              "SUBSCRIPTION_REJECTED"
            ],
            "format": "enum",
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "lifecycleState"
        ],
        "type": "object"
      },
      "ResolveCustomerPayload": {
        "example": {
          "token": "VGhpcyBpcyBhIHRva2VuIGJ5IGRvbW15IHRva2VuIGFuZCBiYXNlNjQgZW5jb2RlZA=="
        },
        "properties": {
          "token": {
            "description": "Opaque token exchangeable for subscription details.",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "type": "object"
      },
      "SubscriptionCancelResponse": {
        "example": {
          "currentSubscription": {
            "lifecycleState": "SUBSCRIPTION_ACTIVE",
            "subscriptionId": "65791df4-2b07-4b52-99c7-783be4b0761d"
          },
          "requestedSubscription": {
            "lifecycleState": "SUBSCRIPTION_CANCELLING",
            "subscriptionId": "11d1a618-4eeb-488b-973c-7e46dafddcf2"
          }
        },
        "properties": {
          "currentSubscription": {
            "$ref": "#/components/schemas/CurrentSubscriptionStateResponse"
          },
          "requestedSubscription": {
            "$ref": "#/components/schemas/RequestedSubscriptionStateResponse"
          }
        },
        "required": [
          "currentSubscription",
          "requestedSubscription"
        ],
        "type": "object"
      },
      "SubscriptionProduct": {
        "example": {
          "deliveryMethod": "SAAS",
          "lifecycleState": "PRODUCT_LIVE",
          "priceType": "CONTRACT",
          "pricingPlan": "Test Plan",
          "productId": "2ea4b536-07c8-479e-a7a7-41ff724e053f",
          "productName": "Test Product Name",
          "vendorName": "STACKIT",
          "vendorWebsiteUrl": "https://example.com"
        },
        "properties": {
          "deliveryMethod": {
            "description": "The product's delivery method.",
            "enum": [
              "SAAS"
            ],
            "format": "enum",
            "type": "string"
          },
          "lifecycleState": {
            "description": "The lifecycle state of the product.",
            "enum": [
              "PRODUCT_LIVE",
              "PRODUCT_PREVIEW"
            ],
            "format": "enum",
            "type": "string"
          },
          "priceType": {
            "description": "The product's price type.",
            "enum": [
              "CONTRACT",
              "FREE",
              "FREE_TRIAL",
              "BYOL",
              "PAYG"
            ],
            "format": "enum",
            "type": "string"
          },
          "pricingPlan": {
            "description": "The product's pricing plan.",
            "type": "string"
          },
          "productId": {
            "description": "The product ID.",
            "type": "string"
          },
          "productName": {
            "description": "The name of the product.",
            "type": "string"
          },
          "vendorName": {
            "description": "The product's vendor name.",
            "type": "string"
          },
          "vendorWebsiteUrl": {
            "description": "The vendor's website.",
            "type": "string"
          }
        },
        "required": [
          "productId",
          "productName",
          "priceType",
          "deliveryMethod",
          "pricingPlan",
          "vendorName",
          "vendorWebsiteUrl",
          "lifecycleState"
        ],
        "type": "object"
      },
      "VendorSubscription": {
        "example": {
          "lifecycleState": "SUBSCRIPTION_PENDING",
          "product": {
            "deliveryMethod": "SAAS",
            "lifecycleState": "PRODUCT_LIVE",
            "priceType": "CONTRACT",
            "pricingPlan": "Test Plan",
            "productId": "2ea4b536-07c8-479e-a7a7-41ff724e053f",
            "productName": "Test Product Name",
            "vendorName": "STACKIT",
            "vendorWebsiteUrl": "https://example.com"
          },
          "projectId": "c5fedcab-920d-40cd-a06f-e7443db8e7f7",
          "subscriptionId": "e93750b2-3d5c-496e-844d-67c947e34c67"
        },
        "properties": {
          "lifecycleState": {
            "description": "Lifecycle state of the subscription.",
            "enum": [
              "SUBSCRIPTION_PENDING",
              "SUBSCRIPTION_ACTIVE",
              "SUBSCRIPTION_INACTIVE",
              "SUBSCRIPTION_CANCELLING",
              "SUBSCRIPTION_CANCELLED",
              "SUBSCRIPTION_REJECTED"
            ],
            "format": "enum",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/SubscriptionProduct"
          },
          "projectId": {
            "description": "The associated consumer project ID.",
            "format": "uuid",
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "projectId",
          "lifecycleState",
          "product"
        ],
        "type": "object"
      },
      "inquiries-create-inquiryPayload": {
        "oneOf": [
          {
            "description": "Suggest a product.",
            "properties": {
              "suggestProduct": {
                "properties": {
                  "companyName": {
                    "description": "The suggested product's company name.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "message": {
                    "description": "An additional message.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "name": {
                    "description": "The suggested product name.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "url": {
                    "description": "The suggested product's website URL.",
                    "format": "url",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "companyName",
                  "url"
                ],
                "type": "object"
              },
              "type": {
                "description": "The form type.",
                "enum": [
                  "suggest_product"
                ],
                "format": "enum",
                "type": "string"
              }
            },
            "required": [
              "type",
              "suggestProduct"
            ],
            "title": "suggestProduct",
            "type": "object"
          },
          {
            "description": "Contact sales.",
            "properties": {
              "contactSales": {
                "properties": {
                  "companyName": {
                    "description": "The company name.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "contactEmail": {
                    "description": "The contact e-mail address.",
                    "format": "email",
                    "type": "string"
                  },
                  "fullName": {
                    "description": "The full name of the contact person.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "message": {
                    "description": "The message content.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "productId": {
                    "description": "The product ID.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "productId",
                  "fullName",
                  "companyName",
                  "contactEmail",
                  "message"
                ],
                "type": "object"
              },
              "type": {
                "description": "The form type.",
                "enum": [
                  "contact_sales"
                ],
                "format": "enum",
                "type": "string"
              }
            },
            "required": [
              "type",
              "contactSales"
            ],
            "title": "contactSales",
            "type": "object"
          },
          {
            "description": "Become a vendor.",
            "properties": {
              "becomeVendor": {
                "properties": {
                  "contactEmail": {
                    "description": "The contact e-mail address.",
                    "format": "email",
                    "type": "string"
                  },
                  "message": {
                    "description": "The message content.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  }
                },
                "required": [
                  "contactEmail",
                  "message"
                ],
                "type": "object"
              },
              "type": {
                "description": "The form type.",
                "enum": [
                  "become_vendor"
                ],
                "format": "enum",
                "type": "string"
              }
            },
            "required": [
              "type",
              "becomeVendor"
            ],
            "title": "becomeVendor",
            "type": "object"
          },
          {
            "description": "Register for testing.",
            "properties": {
              "registerTesting": {
                "properties": {
                  "contactEmail": {
                    "description": "The contact e-mail address.",
                    "format": "email",
                    "type": "string"
                  },
                  "fullName": {
                    "description": "The full name of the contact person.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  },
                  "message": {
                    "description": "The message content.",
                    "maxLength": 512,
                    "pattern": "^[a-zA-ZäüöÄÜÖ0-9,.!?()@\\/:=\\n\\t -]+$",
                    "type": "string"
                  }
                },
                "required": [
                  "fullName",
                  "contactEmail",
                  "message"
                ]
              },
              "type": {
                "description": "The form type.",
                "enum": [
                  "register_testing"
                ],
                "format": "enum",
                "type": "string"
              }
            },
            "required": [
              "type",
              "registerTesting"
            ],
            "title": "registerTesting",
            "type": "object"
          }
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "marketplace@stackit.cloud",
      "name": "STACKIT Marketplace"
    },
    "description": "API to manage STACKIT Marketplace.",
    "termsOfService": "https://stackit.de/en/imprint",
    "title": "STACKIT Marketplace API",
    "version": "1"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/catalog/products": {
      "get": {
        "description": "List all products.",
        "operationId": "ListCatalogProducts",
        "parameters": [
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/locale"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogProductsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "summary": "List all products",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    },
    "/v1/catalog/products/{productId}": {
      "get": {
        "description": "Get a product.",
        "operationId": "GetCatalogProduct",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProductId"
          },
          {
            "$ref": "#/components/parameters/locale"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProductDetail"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get a product",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    },
    "/v1/inquiries": {
      "post": {
        "description": "Create an inquiry to contact sales, become a vendor, or suggest a product. Requests are limited to 10 per 5 minutes.",
        "operationId": "inquiries-create-inquiry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inquiries-create-inquiryPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Create inquiry",
        "x-stackit-authorization": {
          "disabled": true
        }
      }
    },
    "/v1/vendors/projects/{projectId}/resolve-customer": {
      "post": {
        "description": "Get details about the requested subscription.",
        "operationId": "ResolveCustomer",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveCustomerPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorSubscription"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Resolve customer",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.approve"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions": {
      "get": {
        "description": "List all subscriptions.",
        "operationId": "ListVendorSubscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/queryParamProductId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVendorSubscriptionsResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "summary": "List all subscriptions",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.list"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions/{subscriptionId}": {
      "get": {
        "description": "Get a subscription.",
        "operationId": "GetVendorSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/pathParamSubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorSubscription"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get a subscription",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.get"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    },
    "/v1/vendors/projects/{projectId}/subscriptions/{subscriptionId}/approve": {
      "post": {
        "description": "Approve a pending subscription.",
        "operationId": "ApproveSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParamProjectId"
          },
          {
            "$ref": "#/components/parameters/pathParamSubscriptionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveSubscriptionPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Approve a subscription",
        "x-stackit-authorization": {
          "actions": [
            "marketplace.subscription.approve"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project",
          "service-enablement": {
            "services": [
              "cloud.stackit.marketplace"
            ]
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://stackit-marketplace.api.stackit.cloud",
      "variables": {
        "region": {
          "default": "global"
        }
      }
    }
  ]
}